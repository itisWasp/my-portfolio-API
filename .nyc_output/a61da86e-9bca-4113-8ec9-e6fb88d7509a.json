{"/home/wasp/Documents/Andela/Portfolio/API/src/models/BlogModel.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/models/BlogModel.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":19},"end":{"line":48,"column":2}},"5":{"start":{"line":50,"column":15},"end":{"line":50,"column":62}},"6":{"start":{"line":52,"column":0},"end":{"line":52,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["BlogModel.js"],"names":["blogSchema","mongoose","Schema","title","type","required","min","max","body","imgLink","public_id","comment","default","likes","user","Types","ObjectId","ref","date","Date","now","model"],"mappings":";;;;;;;AACA;;;;AADA;AAGA,MAAMA,UAAU,GAAGC,kBAASC,MAAT,CAAgB;AAE/BC,EAAAA,KAAK,EAAG;AACJC,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,GAAG,EAAG,CAHF;AAIJC,IAAAA,GAAG,EAAG;AAJF,GAFuB;AAS/BC,EAAAA,IAAI,EAAG;AACHJ,IAAAA,IAAI,EAAC,QADF;AAEHC,IAAAA,QAAQ,EAAE,IAFP;AAGHC,IAAAA,GAAG,EAAC,CAHD;AAIHC,IAAAA,GAAG,EAAC;AAJD,GATwB;AAgB/BE,EAAAA,OAAO,EAAG;AACNL,IAAAA,IAAI,EAAE,QADA;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,GAAG,EAAG,CAHA;AAINC,IAAAA,GAAG,EAAG;AAJA,GAhBqB;AAuB/BG,EAAAA,SAAS,EAAG,CACR;AADQ,GAvBmB;AA2B/BC,EAAAA,OAAO,EAAG;AACNP,IAAAA,IAAI,EAAE,OADA;AAENQ,IAAAA,OAAO,EAAG;AAFJ,GA3BqB;AAgC/BC,EAAAA,KAAK,EAAG,CACJ;AACEC,IAAAA,IAAI,EAAI;AACFV,MAAAA,IAAI,EAAGH,kBAASC,MAAT,CAAgBa,KAAhB,CAAsBC,QAD3B;AAEFC,MAAAA,GAAG,EAAG;AAFJ;AADV,GADI,CAhCuB;AA0C/BC,EAAAA,IAAI,EAAG;AACHd,IAAAA,IAAI,EAAE,MADH;AAEHQ,IAAAA,OAAO,EAAEO,IAAI,CAACC;AAFX;AA1CwB,CAAhB,CAAnB;;eAiDenB,kBAASoB,KAAT,CAAe,UAAf,EAA2BrB,UAA3B,C","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/models/","sourcesContent":["// const mongoose = require('mongoose');\nimport mongoose from 'mongoose';\n\nconst blogSchema = mongoose.Schema({\n\n    title : {\n        type: 'string',\n        required: true,\n        min : 6,\n        max : 255\n    },\n\n    body : {\n        type:'string',\n        required: true,\n        min:6,\n        max:10000\n    },\n\n    imgLink : {\n        type: 'string',\n        required: true,\n        min : 6,\n        max : 1255\n    },\n\n    public_id : {\n        //\n    },\n\n    comment : {\n        type: 'Array',\n        default : []\n    },\n\n    likes : [\n        {\n          user :  {\n                type : mongoose.Schema.Types.ObjectId,\n                ref : 'Users'\n            }\n\n        }\n    ],\n\n    date : {\n        type: 'date',\n        default: Date.now\n    }\n\n});\n\nexport default mongoose.model('BlogPost', blogSchema);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ba9da8b89a3dade613b22095436620949ab5a384","contentHash":"b4e38b1033703201aff6370a455e23a8756b2ac964bc8e94253adc6c985d9902"},"/home/wasp/Documents/Andela/Portfolio/API/src/index.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":54}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":55}},"4":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}},"6":{"start":{"line":18,"column":13},"end":{"line":18,"column":37}},"7":{"start":{"line":20,"column":0},"end":{"line":22,"column":3}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":48}},"9":{"start":{"line":24,"column":15},"end":{"line":24,"column":27}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":95}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":26},"end":{"line":20,"column":27}},"loc":{"start":{"line":20,"column":32},"end":{"line":22,"column":1}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}],"line":12},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}],"line":12},"2":{"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":37}},"type":"binary-expr","locations":[{"start":{"line":18,"column":13},"end":{"line":18,"column":29}},{"start":{"line":18,"column":33},"end":{"line":18,"column":37}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":2,"1":1},"b":{"0":[1,1],"1":[2,2],"2":[1,1]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["dotenv","config","port","process","env","PORT","app","listen","console","log"],"mappings":";;;;;;;AAGA;;AACA;;;;AAJA;AACA;AAKAA,gBAAOC,MAAP;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEAC,aAAIC,MAAJ,CAAWL,IAAX,EAAiB,MAAK;AAClBM,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBP,IAAK,EAA3C;AACH,CAFD;;eAIeI,Y","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/","sourcesContent":["// const app = require('./app');\n// const dotenv = require('dotenv');\n\nimport app from './app.js';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst port = process.env.PORT || 5000;\n\napp.listen(port, ()=> {\n    console.log(`Server Started on Port ${port}`);\n});\n\nexport default app;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce51d46cd9770880b04aeed92aa506639ae5069a","contentHash":"cb497910b80e5bdb557b761aae190e7886b5cc6ecb12afc02f3df393798d2137"},"/home/wasp/Documents/Andela/Portfolio/API/src/app.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/app.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":59}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":20},"end":{"line":14,"column":79}},"6":{"start":{"line":16,"column":17},"end":{"line":16,"column":73}},"7":{"start":{"line":18,"column":18},"end":{"line":18,"column":75}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":63}},"9":{"start":{"line":22,"column":24},"end":{"line":22,"column":77}},"10":{"start":{"line":24,"column":15},"end":{"line":24,"column":62}},"11":{"start":{"line":26,"column":12},"end":{"line":26,"column":51}},"12":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"13":{"start":{"line":38,"column":12},"end":{"line":38,"column":35}},"14":{"start":{"line":40,"column":0},"end":{"line":40,"column":25}},"15":{"start":{"line":42,"column":20},"end":{"line":46,"column":1}},"16":{"start":{"line":48,"column":0},"end":{"line":53,"column":3}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":60}},"18":{"start":{"line":55,"column":0},"end":{"line":55,"column":33}},"19":{"start":{"line":56,"column":0},"end":{"line":56,"column":72}},"20":{"start":{"line":57,"column":0},"end":{"line":57,"column":69}},"21":{"start":{"line":58,"column":0},"end":{"line":58,"column":70}},"22":{"start":{"line":59,"column":0},"end":{"line":59,"column":133}},"23":{"start":{"line":60,"column":15},"end":{"line":60,"column":18}},"24":{"start":{"line":61,"column":0},"end":{"line":61,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":31}},"loc":{"start":{"line":28,"column":37},"end":{"line":28,"column":95}},"line":28},"1":{"name":"(anonymous_1)","decl":{"start":{"line":51,"column":8},"end":{"line":51,"column":9}},"loc":{"start":{"line":51,"column":14},"end":{"line":53,"column":1}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":46},"end":{"line":28,"column":92}},"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}],"line":28},"1":{"loc":{"start":{"line":28,"column":46},"end":{"line":28,"column":67}},"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":10,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":10,"1":1},"b":{"0":[4,6],"1":[10,10]},"inputSourceMap":{"version":3,"sources":["app.js"],"names":["app","dotenv","config","corsOptions","origin","optionsSuccessStatus","mongoose","connect","process","env","DB_CONNECT","useNewUrlParser","useUnifiedTopology","then","console","log","use","express","json","contactRoute","blogRoute","userRoute","swaggerUi","serve","setup","doc"],"mappings":";;;;;;;AASA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMA,GAAG,GAAG,uBAAZ;;AAWAC,gBAAOC,MAAP;;AAEA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,MAAM,EAAE,GAAV;AAAeC,EAAAA,oBAAoB,EAAE,GAArC,CAAyC;;AAAzC,CAApB;;AAGAC,kBAASC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,UAA7B,EAAyC;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAzC,EAA8FC,IAA9F,CAAmG,MAAK;AACpG,uBAAOA,IAAP,CACIC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CADJ;AAIH,CALD;;AAOAf,GAAG,CAACgB,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAlB,GAAG,CAACgB,GAAJ,CAAQ,MAAR,EAAgB,mBAAKb,WAAL,CAAhB,EAAmCgB,qBAAnC;AACAnB,GAAG,CAACgB,GAAJ,CAAQ,MAAR,EAAgB,mBAAKb,WAAL,CAAhB,EAAmCiB,kBAAnC;AACApB,GAAG,CAACgB,GAAJ,CAAQ,MAAR,EAAgB,mBAAKb,WAAL,CAAhB,EAAmCkB,mBAAnC;AACArB,GAAG,CAACgB,GAAJ,CAAQ,MAAR,EAAgB,mBAAKb,WAAL,CAAhB,EAAmCmB,0BAAUC,KAA7C,EAAoDD,0BAAUE,KAAV,CAAgBC,gBAAhB,CAApD;eAEezB,G","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/","sourcesContent":["// const express = require('express');\n// const app = express(); \n// const mongoose = require('mongoose');\n// const dotenv = require('dotenv');\n// const contactRoute = require('./routes/ContactRoute');\n// const blogRoute = require('./routes/BlogRoute');\n// const userRoute = require('./routes/UsersRoute');\n// const init = require('./config/init');\n\nimport express from 'express';\nconst app = express();\nimport mongoose from 'mongoose';\nimport dotenv from 'dotenv';\nimport contactRoute from './routes/ContactRoute.js';\nimport blogRoute from './routes/BlogRoute.js';\nimport userRoute from './routes/UsersRoute.js';\nimport init from './config/init.js';\nimport swaggerUi from 'swagger-ui-express';\nimport doc from './openDoc.js';\nimport cors from 'cors';\n\ndotenv.config();\n\nconst corsOptions = { origin: '*', optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204 \n} \n\nmongoose.connect(process.env.DB_CONNECT, { useNewUrlParser: true, useUnifiedTopology: true }).then(()=> {\n    init().then(\n        console.log('Connected to Db')\n    )\n    \n});\n\napp.use(express.json());\napp.use('/api', cors(corsOptions) ,contactRoute);\napp.use('/api', cors(corsOptions) ,blogRoute);\napp.use('/api', cors(corsOptions) ,userRoute);\napp.use('/doc', cors(corsOptions) ,swaggerUi.serve, swaggerUi.setup(doc));\n\nexport default app;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e8fcccfed5b39925a9e829ac7c0e3fd15c8f897b","contentHash":"6ef931486317f83ac8795a696445527746a73caf66fc142619631097344728d0"},"/home/wasp/Documents/Andela/Portfolio/API/src/routes/ContactRoute.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/routes/ContactRoute.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":25},"end":{"line":10,"column":95}},"4":{"start":{"line":12,"column":19},"end":{"line":12,"column":83}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":20,"column":15},"end":{"line":20,"column":40}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":67}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":91}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":99}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":107}},"11":{"start":{"line":26,"column":15},"end":{"line":26,"column":21}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":3},"b":{"0":[2,1],"1":[3,3]},"inputSourceMap":{"version":3,"sources":["ContactRoute.js"],"names":["router","express","Router","post","ContactController","submitForm","get","privateRoute","authAdmin","getForm","getFormById","delete","deleteForm"],"mappings":";;;;;;;AAKA;;AAEA;;AACA;;;;AARA;AACA;AACA;AACA;AAGA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAIAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,2BAAkBC,UAA9C;AACAL,MAAM,CAACM,GAAP,CAAW,UAAX,EAAuBC,qBAAaC,SAApC,EAAgDJ,2BAAkBK,OAAlE;AACAT,MAAM,CAACM,GAAP,CAAW,cAAX,EAA2BC,qBAAaC,SAAxC,EAAoDJ,2BAAkBM,WAAtE;AACAV,MAAM,CAACW,MAAP,CAAc,oBAAd,EAAoCJ,qBAAaC,SAAjD,EAA6DJ,2BAAkBQ,UAA/E;eAEeZ,M","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/routes/","sourcesContent":["// const express = require('express');\n// const router = express.Router();\n// const ContactController = require('../controllers/ContactController');\n// const privateRoute = require('../middlewares/verifyToken');\n\nimport express from 'express';\nconst router = express.Router();\nimport ContactController from '../controllers/ContactController.js';\nimport privateRoute from '../middlewares/verifyToken.js';\n\nrouter.post('/PostContact', ContactController.submitForm);\nrouter.get('/contact', privateRoute.authAdmin , ContactController.getForm);\nrouter.get('/contact/:id', privateRoute.authAdmin , ContactController.getFormById);\nrouter.delete('/DeleteContact/:id', privateRoute.authAdmin , ContactController.deleteForm);\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"662b2a17e4a2029e7c01feafb2eed8f953bd35fe","contentHash":"abfbeab8bd2a88e6f69879606939547c625fb739632cfc3310569f7630bd2eb0"},"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/ContactController.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/ContactController.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":20},"end":{"line":8,"column":80}},"3":{"start":{"line":10,"column":25},"end":{"line":10,"column":95}},"4":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"5":{"start":{"line":14,"column":44},"end":{"line":14,"column":195}},"6":{"start":{"line":14,"column":62},"end":{"line":14,"column":166}},"7":{"start":{"line":14,"column":176},"end":{"line":14,"column":193}},"8":{"start":{"line":14,"column":196},"end":{"line":14,"column":207}},"9":{"start":{"line":20,"column":0},"end":{"line":41,"column":3}},"10":{"start":{"line":24,"column":6},"end":{"line":24,"column":51}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":67}},"12":{"start":{"line":26,"column":13},"end":{"line":26,"column":67}},"13":{"start":{"line":27,"column":18},"end":{"line":31,"column":4}},"14":{"start":{"line":33,"column":2},"end":{"line":40,"column":3}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":25}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},"17":{"start":{"line":37,"column":4},"end":{"line":39,"column":7}},"18":{"start":{"line":43,"column":0},"end":{"line":52,"column":3}},"19":{"start":{"line":44,"column":2},"end":{"line":51,"column":3}},"20":{"start":{"line":45,"column":20},"end":{"line":45,"column":54}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":34}},"22":{"start":{"line":48,"column":4},"end":{"line":50,"column":7}},"23":{"start":{"line":54,"column":0},"end":{"line":66,"column":3}},"24":{"start":{"line":55,"column":2},"end":{"line":65,"column":3}},"25":{"start":{"line":56,"column":20},"end":{"line":58,"column":6}},"26":{"start":{"line":59,"column":4},"end":{"line":59,"column":34}},"27":{"start":{"line":61,"column":4},"end":{"line":61,"column":20}},"28":{"start":{"line":62,"column":4},"end":{"line":64,"column":7}},"29":{"start":{"line":68,"column":0},"end":{"line":79,"column":3}},"30":{"start":{"line":69,"column":2},"end":{"line":78,"column":3}},"31":{"start":{"line":70,"column":4},"end":{"line":72,"column":7}},"32":{"start":{"line":73,"column":4},"end":{"line":73,"column":27}},"33":{"start":{"line":75,"column":4},"end":{"line":77,"column":7}},"34":{"start":{"line":81,"column":15},"end":{"line":81,"column":32}},"35":{"start":{"line":82,"column":0},"end":{"line":82,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":95}},"line":12},"1":{"name":"_defineProperty","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":42},"end":{"line":14,"column":209}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":49},"end":{"line":20,"column":50}},"loc":{"start":{"line":20,"column":69},"end":{"line":41,"column":1}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":46},"end":{"line":43,"column":47}},"loc":{"start":{"line":43,"column":66},"end":{"line":52,"column":1}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":50},"end":{"line":54,"column":51}},"loc":{"start":{"line":54,"column":70},"end":{"line":66,"column":1}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":68,"column":49},"end":{"line":68,"column":50}},"loc":{"start":{"line":68,"column":69},"end":{"line":79,"column":1}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}],"line":12},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}],"line":12},"2":{"loc":{"start":{"line":14,"column":44},"end":{"line":14,"column":195}},"type":"if","locations":[{"start":{"line":14,"column":44},"end":{"line":14,"column":195}},{"start":{"line":14,"column":44},"end":{"line":14,"column":195}}],"line":14},"3":{"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":67}},"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":67}},{"start":{"line":26,"column":2},"end":{"line":26,"column":67}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":4,"6":0,"7":4,"8":4,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":0,"23":1,"24":1,"25":1,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1},"f":{"0":2,"1":4,"2":1,"3":1,"4":1,"5":0},"b":{"0":[2,0],"1":[2,2],"2":[0,4],"3":[0,1]},"inputSourceMap":{"version":3,"sources":["ContactController.js"],"names":["ContactController","req","res","error","schema","validate","body","status","send","details","message","contact","Contacts","fullname","FullName","email","Email","messages","Messages","save","json","err","find","findOne","_id","params","id","deleteOne"],"mappings":";;;;;;;AAGA;;AACA;;;;;;AAEA;AACA;AAGA,MAAMA,iBAAN,CAAuB;;gBAAjBA,iB,gBACkB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAEpC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYC,2BAAOC,QAAP,CAAgBJ,GAAG,CAACK,IAApB,CAAlB;;AACA,MAAGH,KAAH,EAAU,OAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiBC,OAAtC,CAAP;AAGV,QAAMC,OAAO,GAAG,IAAIC,qBAAJ,CAAa;AAC7BC,IAAAA,QAAQ,EAAEZ,GAAG,CAACK,IAAJ,CAASQ,QADU;AAE7BC,IAAAA,KAAK,EAAEd,GAAG,CAACK,IAAJ,CAASU,KAFa;AAG7BC,IAAAA,QAAQ,EAAEhB,GAAG,CAACK,IAAJ,CAASY;AAHU,GAAb,CAAhB;;AAMA,MAAG;AACC,UAAMP,OAAO,CAACQ,IAAR,EAAN;AACAjB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqBT,OAArB;AACH,GAHD,CAGE,OAAMU,GAAN,EAAU;AACRnB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAACV,MAAAA,OAAO,EAAGW;AAAX,KAArB;AACH;AAGJ,C;;gBAtBCrB,iB,aAwBe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAG;AACC,UAAMS,OAAO,GAAG,MAAMC,sBAASU,IAAT,EAAtB;AACApB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqBT,OAArB;AACH,GAHD,CAGE,OAAMU,GAAN,EAAU;AACRnB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAACV,MAAAA,OAAO,EAAEW;AAAV,KAArB;AACH;AACJ,C;;gBA/BCrB,iB,iBAiCmB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,MAAI;AACA,UAAMS,OAAO,GAAG,MAAMC,sBAASW,OAAT,CAAiB;AAACC,MAAAA,GAAG,EAAEvB,GAAG,CAACwB,MAAJ,CAAWC;AAAjB,KAAjB,CAAtB;AACAxB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqBT,OAArB;AACH,GAHD,CAKA,OAAOU,GAAP,EAAY;AACRnB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACAL,IAAAA,GAAG,CAACkB,IAAJ,CAAS;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAT;AACH;AACJ,C;;gBA3CCrB,iB,gBA6CkB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACpC,MAAG;AACC,UAAMU,sBAASe,SAAT,CAAmB;AAACH,MAAAA,GAAG,EAAEvB,GAAG,CAACwB,MAAJ,CAAWC;AAAjB,KAAnB,CAAN;AACAxB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB;AACH,GAHD,CAIA,OAAMC,GAAN,EAAU;AACNnB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAACjB,MAAAA,KAAK,EAAE;AAAR,KAArB;AACH;AACJ,C;;eAIUH,iB","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/","sourcesContent":["// // const Contacts = require('../models/ContactModel');\n// // const schema = require('../middlewares/ContactValidation');\n\nimport Contacts from '../models/ContactModel.js';\nimport schema from '../middlewares/ContactValidation.js';\n\n// // import Contacts from '../models/ContactModel';\n// // import schema from '../middlewares/ContactValidation'\n\n\nclass ContactController{\n    static submitForm = async (req, res) => {\n\n        //Let's validate the data before we send the data\n        const { error } = schema.validate(req.body);\n        if(error) return res.status(400).send(error.details[0].message);\n\n        \n        const contact = new Contacts({\n        fullname: req.body.FullName,\n        email: req.body.Email,\n        messages: req.body.Messages,\n        });\n\n        try{\n            await contact.save();\n            res.status(200).json(contact);\n        } catch(err){\n            res.status(400).json({message : err});\n        }\n        \n        \n    }\n\n    static getForm = async (req, res) => {\n        try{\n            const contact = await Contacts.find()\n            res.status(200).json(contact);\n        } catch(err){\n            res.status(404).json({message :err});\n        }\n    }\n\n    static getFormById = async (req, res) => {\n        try {\n            const contact = await Contacts.findOne({_id: req.params.id});\n            res.status(200).json(contact);\n        }\n\n        catch (err) {\n            res.status(404);\n            res.json({err: 'The Form Doesn\\'t exist'});\n        }\n    }\n\n    static deleteForm = async (req, res) => {\n        try{\n            await Contacts.deleteOne({_id: req.params.id});\n            res.status(200).json();\n        }\n        catch(err){\n            res.status(404).json({error: 'The Form Doesn\\'t exist'});\n        }\n    }\n\n}\n\nexport default ContactController;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"25af2bc28550ebaaa8ca680c8f2219383fc9f713","contentHash":"809ea9049f3aed69df3f533263dfd8713a9993d73de598ee105307ed110206e8"},"/home/wasp/Documents/Andela/Portfolio/API/src/models/ContactModel.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/models/ContactModel.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":22},"end":{"line":36,"column":2}},"5":{"start":{"line":38,"column":15},"end":{"line":38,"column":65}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["ContactModel.js"],"names":["contactSchema","mongoose","Schema","fullname","type","required","min","max","email","messages","date","default","Date","now","model"],"mappings":";;;;;;;AACA;;;;AADA;AAGA,MAAMA,aAAa,GAAGC,kBAASC,MAAT,CAAgB;AAClCC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,GAAG,EAAE,CAHE;AAIPC,IAAAA,GAAG,EAAE;AAJE,GADuB;AAOlCC,EAAAA,KAAK,EAAG;AACJJ,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,GAAG,EAAC,CAHA;AAIJC,IAAAA,GAAG,EAAE;AAJD,GAP0B;AAalCE,EAAAA,QAAQ,EAAG;AACPL,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,GAAG,EAAE,CAHE;AAIPC,IAAAA,GAAG,EAAE;AAJE,GAbuB;AAmBlCG,EAAAA,IAAI,EAAE;AACFN,IAAAA,IAAI,EAAE,MADJ;AAEFO,IAAAA,OAAO,EAAEC,IAAI,CAACC;AAFZ;AAnB4B,CAAhB,CAAtB;;eAyBeZ,kBAASa,KAAT,CAAe,UAAf,EAA2Bd,aAA3B,C","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/models/","sourcesContent":["// const mongoose = require('mongoose');\nimport mongoose from 'mongoose';\n\nconst contactSchema = mongoose.Schema({\n    fullname : {\n        type: 'string',\n        required: true,\n        min: 6,\n        max: 255\n    },\n    email : {\n        type: 'string',\n        required: true,\n        min:6,\n        max: 255\n    },\n    messages : {\n        type: 'string',\n        required: true,\n        min: 6,\n        max: 2000\n    },\n    date :{\n        type: 'date',\n        default: Date.now\n    }\n});\n\nexport default mongoose.model('Contacts', contactSchema);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e6c88d0fb9bc39ba797e2c605d8de422e0ca67a7","contentHash":"194747e28ff2baa4d573407d5ecb309890bf67bf7ce698f5aebbb361430e48ac"},"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/ContactValidation.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/ContactValidation.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":55}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":14,"column":15},"end":{"line":18,"column":2}},"5":{"start":{"line":20,"column":15},"end":{"line":20,"column":21}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["ContactValidation.js"],"names":["schema","Joi","object","FullName","string","min","trim","required","Email","email","Messages"],"mappings":";;;;;;;AACA;;;;AADA;AAGA;AACA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACtBC,EAAAA,QAAQ,EAACF,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB,GAA2BC,QAA3B,EADa;AAEtBC,EAAAA,KAAK,EAACP,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB,GAA2BC,QAA3B,GAAsCE,KAAtC,EAFgB;AAGtBC,EAAAA,QAAQ,EAACT,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB,GAA2BC,QAA3B;AAHa,CAAX,CAAf;;eAMeP,M","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/","sourcesContent":["// const Joi = require('@hapi/joi');\nimport Joi from '@hapi/joi';\n\n//server side validation\nconst schema = Joi.object({\n    FullName:Joi.string().min(6).trim().required(),\n    Email:Joi.string().min(6).trim().required().email(),\n    Messages:Joi.string().min(6).trim().required()\n});\n\nexport default schema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"74cb1b8e720b640c403cd98e99065824201bf547","contentHash":"3dc16e7df145dd82ef62ac2fa9a24645fa554d9b6f9770b090a884e15c3c5220"},"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/verifyToken.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/verifyToken.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":20},"end":{"line":8,"column":67}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":44},"end":{"line":12,"column":195}},"5":{"start":{"line":12,"column":62},"end":{"line":12,"column":166}},"6":{"start":{"line":12,"column":176},"end":{"line":12,"column":193}},"7":{"start":{"line":12,"column":196},"end":{"line":12,"column":207}},"8":{"start":{"line":16,"column":0},"end":{"line":31,"column":3}},"9":{"start":{"line":17,"column":16},"end":{"line":17,"column":40}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":59}},"11":{"start":{"line":18,"column":14},"end":{"line":18,"column":59}},"12":{"start":{"line":20,"column":2},"end":{"line":30,"column":3}},"13":{"start":{"line":21,"column":21},"end":{"line":21,"column":82}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":29}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":11}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":42}},"17":{"start":{"line":33,"column":0},"end":{"line":50,"column":3}},"18":{"start":{"line":34,"column":16},"end":{"line":34,"column":40}},"19":{"start":{"line":35,"column":2},"end":{"line":35,"column":106}},"20":{"start":{"line":35,"column":14},"end":{"line":35,"column":106}},"21":{"start":{"line":37,"column":2},"end":{"line":49,"column":3}},"22":{"start":{"line":38,"column":21},"end":{"line":38,"column":82}},"23":{"start":{"line":40,"column":4},"end":{"line":40,"column":29}},"24":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"25":{"start":{"line":43,"column":6},"end":{"line":43,"column":68}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":11}},"27":{"start":{"line":48,"column":4},"end":{"line":48,"column":42}},"28":{"start":{"line":52,"column":15},"end":{"line":52,"column":27}},"29":{"start":{"line":53,"column":0},"end":{"line":53,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10},"1":{"name":"_defineProperty","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":24}},"loc":{"start":{"line":12,"column":42},"end":{"line":12,"column":209}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":42},"end":{"line":16,"column":43}},"loc":{"start":{"line":16,"column":62},"end":{"line":31,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":43},"end":{"line":33,"column":44}},"loc":{"start":{"line":33,"column":63},"end":{"line":50,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10},"2":{"loc":{"start":{"line":12,"column":44},"end":{"line":12,"column":195}},"type":"if","locations":[{"start":{"line":12,"column":44},"end":{"line":12,"column":195}},{"start":{"line":12,"column":44},"end":{"line":12,"column":195}}],"line":12},"3":{"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":59}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":59}},{"start":{"line":18,"column":2},"end":{"line":18,"column":59}}],"line":18},"4":{"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":106}},"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":106}},{"start":{"line":35,"column":2},"end":{"line":35,"column":106}}],"line":35},"5":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{"line":42,"column":4},"end":{"line":44,"column":5}}],"line":42}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":0,"6":2,"7":2,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":1,"16":0,"17":1,"18":6,"19":6,"20":2,"21":4,"22":4,"23":4,"24":4,"25":0,"26":4,"27":0,"28":1,"29":1},"f":{"0":1,"1":2,"2":1,"3":6},"b":{"0":[0,1],"1":[1,1],"2":[0,2],"3":[0,1],"4":[2,4],"5":[0,4]},"inputSourceMap":{"version":3,"sources":["verifyToken.js"],"names":["privateRoute","req","res","next","token","header","status","send","verified","jwt","verify","process","env","TOKEN_SECRET","user","error","role"],"mappings":";;;;;;;AACA;;;;;;AAEA,MAAMA,YAAN,CAAmB;;gBAAbA,Y,cACgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClC,QAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,YAAX,CAAd;AACA,MAAG,CAACD,KAAJ,EAAW,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB,CAAP;;AAEX,MAAI;AAEA,UAAMC,QAAQ,GAAGC,sBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,YAA9B,CAAjB;;AACAZ,IAAAA,GAAG,CAACa,IAAJ,GAAWN,QAAQ,CAACM,IAApB,CAHA,CAKA;AACA;AACA;;AAEAX,IAAAA,IAAI;AAEP,GAXD,CAWE,OAAOY,KAAP,EAAc;AACZb,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACH;AAEJ,C;;gBApBCP,Y,eAsBiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,QAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,YAAX,CAAd;AACA,MAAG,CAACD,KAAJ,EAAW,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8DAArB,CAAP;;AAEX,MAAI;AAEA,UAAMC,QAAQ,GAAGC,sBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,YAA9B,CAAjB;;AACAZ,IAAAA,GAAG,CAACa,IAAJ,GAAWN,QAAQ,CAACM,IAApB;;AAEA,QAAGb,GAAG,CAACa,IAAJ,CAASE,IAAT,IAAiB,MAApB,EAA2B;AACvBd,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB;AACH;;AAEDJ,IAAAA,IAAI;AAEP,GAXD,CAWE,OAAOY,KAAP,EAAc;AACZb,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACH;AAEJ,C;;eAIUP,Y","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/","sourcesContent":["// const jwt = require('jsonwebtoken');\nimport jwt from 'jsonwebtoken';\n\nclass privateRoute {\n    static authUser = (req, res, next) => {\n        const token = req.header('auth-token');\n        if(!token) return res.status(401).send('Access Denied');\n    \n        try {\n            \n            const verified = jwt.verify(token, process.env.TOKEN_SECRET);\n            req.user = verified.user;\n\n            // if(req.user.role == 'admin'){\n            //     res.status(401).send('Access Denied You are an Admin');\n            // }\n    \n            next();\n    \n        } catch (error) {\n            res.status(400).send('Invalid Token');\n        }\n    \n    }\n    \n    static authAdmin = (req, res, next) => {\n        const token = req.header('auth-token');\n        if(!token) return res.status(401).send('Access Denied You Do not have permission to access this Page');\n    \n        try {\n    \n            const verified = jwt.verify(token, process.env.TOKEN_SECRET);\n            req.user = verified.user;\n\n            if(req.user.role == 'user'){\n                res.status(401).send('Access Denied You Are not Authorized ');\n            }\n    \n            next();\n    \n        } catch (error) {\n            res.status(400).send('Invalid Token');\n        }\n    \n    }\n}\n\n\nexport default privateRoute;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66bb539dbc5fc84fa18e4696594218d5861f262b","contentHash":"ae126a9a918ac240f7b9007d3637e2d91893e8aa99ae080bd83675f662177f39"},"/home/wasp/Documents/Andela/Portfolio/API/src/routes/BlogRoute.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/routes/BlogRoute.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":22},"end":{"line":10,"column":89}},"4":{"start":{"line":12,"column":13},"end":{"line":12,"column":67}},"5":{"start":{"line":14,"column":19},"end":{"line":14,"column":83}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"7":{"start":{"line":23,"column":15},"end":{"line":23,"column":40}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":71}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":87}},"10":{"start":{"line":30,"column":0},"end":{"line":30,"column":104}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":57}},"12":{"start":{"line":32,"column":0},"end":{"line":32,"column":65}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":105}},"14":{"start":{"line":34,"column":0},"end":{"line":34,"column":95}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":89}},"16":{"start":{"line":36,"column":15},"end":{"line":36,"column":21}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":95}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":92}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":4},"b":{"0":[3,1],"1":[4,4]},"inputSourceMap":{"version":3,"sources":["BlogRoute.js"],"names":["router","express","Router","post","privateRoute","authAdmin","imagePost","BlogController","patch","updatePostById","get","getPosts","getPostsById","delete","deletePostById","put","authUser","commentPost","likePost"],"mappings":";;;;;;;AAMA;;AAEA;;AACA;;AACA;;;;AAVA;AACA;AACA;AACA;AACA;AAGA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAKA;AACA;AACA;AAEAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,qBAAaC,SAApC,EAAgDC,cAAhD;AACAN,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBC,qBAAaC,SAAtC,EAAkDE,wBAAeJ,IAAjE;AACAH,MAAM,CAACQ,KAAP,CAAa,iBAAb,EAAgCJ,qBAAaC,SAA7C,EAAyDE,wBAAeE,cAAxE;AACAT,MAAM,CAACU,GAAP,CAAW,UAAX,EAAuBH,wBAAeI,QAAtC;AACAX,MAAM,CAACU,GAAP,CAAW,cAAX,EAA2BH,wBAAeK,YAA1C;AACAZ,MAAM,CAACa,MAAP,CAAc,iBAAd,EAAiCT,qBAAaC,SAA9C,EAA0DE,wBAAeO,cAAzE;AACAd,MAAM,CAACe,GAAP,CAAW,cAAX,EAA2BX,qBAAaY,QAAxC,EAAkDT,wBAAeU,WAAjE;AACAjB,MAAM,CAACe,GAAP,CAAW,WAAX,EAAwBX,qBAAaY,QAArC,EAA+CT,wBAAeW,QAA9D;eAEelB,M","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/routes/","sourcesContent":["// const  express = require('express');\n// const router = express.Router();\n// const BlogController = require('../controllers/BlogController');\n// const imagePost = require('../helpers/image');\n// const privateRoute = require('../middlewares/verifyToken');\n\nimport express from 'express';\nconst router = express.Router();\nimport BlogController from '../controllers/BlogController.js';\nimport imagePost from '../helpers/image.js';\nimport privateRoute from '../middlewares/verifyToken.js';\n\n// import express from 'express';\n// import BlogController from '../controllers/BlogController'\n// import imagePost from '../helpers/image';\n\nrouter.post('/upload', privateRoute.authAdmin , imagePost);\nrouter.post('/Postblog', privateRoute.authAdmin , BlogController.post);\nrouter.patch('/Updateblog/:id', privateRoute.authAdmin , BlogController.updatePostById);\nrouter.get('/Getblog', BlogController.getPosts);\nrouter.get('/Getblog/:id', BlogController.getPostsById);\nrouter.delete('/Deleteblog/:id', privateRoute.authAdmin , BlogController.deletePostById);\nrouter.put('/comment/:id', privateRoute.authUser ,BlogController.commentPost)\nrouter.put('/like/:id', privateRoute.authUser, BlogController.likePost);\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7ea48b4dd2c8de33d86cfe7e03d6dee9d085e8c5","contentHash":"b98a363a4023d527abcf2a4129f0cfacd9a50d53b2df54277b2cad0431cdca3f"},"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/BlogController.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/BlogController.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":17},"end":{"line":8,"column":74}},"3":{"start":{"line":10,"column":22},"end":{"line":10,"column":89}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":95}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":44},"end":{"line":16,"column":195}},"7":{"start":{"line":16,"column":62},"end":{"line":16,"column":166}},"8":{"start":{"line":16,"column":176},"end":{"line":16,"column":193}},"9":{"start":{"line":16,"column":196},"end":{"line":16,"column":207}},"10":{"start":{"line":20,"column":0},"end":{"line":43,"column":3}},"11":{"start":{"line":24,"column":6},"end":{"line":24,"column":48}},"12":{"start":{"line":26,"column":2},"end":{"line":28,"column":5}},"13":{"start":{"line":26,"column":13},"end":{"line":28,"column":5}},"14":{"start":{"line":29,"column":15},"end":{"line":33,"column":4}},"15":{"start":{"line":35,"column":2},"end":{"line":42,"column":3}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":19}},"18":{"start":{"line":39,"column":4},"end":{"line":41,"column":7}},"19":{"start":{"line":45,"column":0},"end":{"line":84,"column":3}},"20":{"start":{"line":49,"column":6},"end":{"line":49,"column":48}},"21":{"start":{"line":51,"column":2},"end":{"line":53,"column":5}},"22":{"start":{"line":51,"column":13},"end":{"line":53,"column":5}},"23":{"start":{"line":54,"column":15},"end":{"line":58,"column":4}},"24":{"start":{"line":60,"column":2},"end":{"line":83,"column":3}},"25":{"start":{"line":61,"column":17},"end":{"line":63,"column":6}},"26":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"27":{"start":{"line":66,"column":6},"end":{"line":66,"column":34}},"28":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"29":{"start":{"line":70,"column":6},"end":{"line":70,"column":32}},"30":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"31":{"start":{"line":74,"column":6},"end":{"line":74,"column":40}},"32":{"start":{"line":77,"column":4},"end":{"line":77,"column":22}},"33":{"start":{"line":78,"column":4},"end":{"line":78,"column":19}},"34":{"start":{"line":80,"column":4},"end":{"line":82,"column":7}},"35":{"start":{"line":86,"column":0},"end":{"line":98,"column":3}},"36":{"start":{"line":87,"column":2},"end":{"line":97,"column":3}},"37":{"start":{"line":88,"column":17},"end":{"line":88,"column":48}},"38":{"start":{"line":89,"column":4},"end":{"line":92,"column":7}},"39":{"start":{"line":94,"column":4},"end":{"line":96,"column":7}},"40":{"start":{"line":100,"column":0},"end":{"line":111,"column":3}},"41":{"start":{"line":101,"column":2},"end":{"line":110,"column":3}},"42":{"start":{"line":102,"column":17},"end":{"line":104,"column":6}},"43":{"start":{"line":105,"column":4},"end":{"line":105,"column":31}},"44":{"start":{"line":107,"column":4},"end":{"line":109,"column":7}},"45":{"start":{"line":113,"column":0},"end":{"line":124,"column":3}},"46":{"start":{"line":114,"column":2},"end":{"line":123,"column":3}},"47":{"start":{"line":115,"column":4},"end":{"line":117,"column":7}},"48":{"start":{"line":118,"column":4},"end":{"line":118,"column":27}},"49":{"start":{"line":120,"column":4},"end":{"line":122,"column":7}},"50":{"start":{"line":126,"column":0},"end":{"line":156,"column":3}},"51":{"start":{"line":130,"column":6},"end":{"line":130,"column":51}},"52":{"start":{"line":132,"column":2},"end":{"line":134,"column":5}},"53":{"start":{"line":132,"column":13},"end":{"line":134,"column":5}},"54":{"start":{"line":136,"column":2},"end":{"line":155,"column":3}},"55":{"start":{"line":137,"column":17},"end":{"line":139,"column":6}},"56":{"start":{"line":141,"column":4},"end":{"line":147,"column":5}},"57":{"start":{"line":142,"column":6},"end":{"line":146,"column":9}},"58":{"start":{"line":149,"column":4},"end":{"line":149,"column":22}},"59":{"start":{"line":150,"column":4},"end":{"line":150,"column":31}},"60":{"start":{"line":152,"column":4},"end":{"line":154,"column":7}},"61":{"start":{"line":158,"column":0},"end":{"line":187,"column":3}},"62":{"start":{"line":159,"column":2},"end":{"line":186,"column":3}},"63":{"start":{"line":160,"column":17},"end":{"line":162,"column":6}},"64":{"start":{"line":164,"column":4},"end":{"line":168,"column":5}},"65":{"start":{"line":164,"column":34},"end":{"line":164,"column":70}},"66":{"start":{"line":165,"column":6},"end":{"line":167,"column":9}},"67":{"start":{"line":170,"column":4},"end":{"line":172,"column":7}},"68":{"start":{"line":173,"column":4},"end":{"line":173,"column":22}},"69":{"start":{"line":174,"column":4},"end":{"line":174,"column":25}},"70":{"start":{"line":183,"column":4},"end":{"line":185,"column":7}},"71":{"start":{"line":189,"column":15},"end":{"line":189,"column":29}},"72":{"start":{"line":190,"column":0},"end":{"line":190,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"_defineProperty","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":42},"end":{"line":16,"column":209}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":40},"end":{"line":20,"column":41}},"loc":{"start":{"line":20,"column":60},"end":{"line":43,"column":1}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":50},"end":{"line":45,"column":51}},"loc":{"start":{"line":45,"column":70},"end":{"line":84,"column":1}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":86,"column":44},"end":{"line":86,"column":45}},"loc":{"start":{"line":86,"column":64},"end":{"line":98,"column":1}},"line":86},"5":{"name":"(anonymous_5)","decl":{"start":{"line":100,"column":48},"end":{"line":100,"column":49}},"loc":{"start":{"line":100,"column":68},"end":{"line":111,"column":1}},"line":100},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":50},"end":{"line":113,"column":51}},"loc":{"start":{"line":113,"column":70},"end":{"line":124,"column":1}},"line":113},"7":{"name":"(anonymous_7)","decl":{"start":{"line":126,"column":47},"end":{"line":126,"column":48}},"loc":{"start":{"line":126,"column":67},"end":{"line":156,"column":1}},"line":126},"8":{"name":"(anonymous_8)","decl":{"start":{"line":158,"column":44},"end":{"line":158,"column":45}},"loc":{"start":{"line":158,"column":64},"end":{"line":187,"column":1}},"line":158},"9":{"name":"(anonymous_9)","decl":{"start":{"line":164,"column":26},"end":{"line":164,"column":27}},"loc":{"start":{"line":164,"column":34},"end":{"line":164,"column":70}},"line":164}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":16,"column":44},"end":{"line":16,"column":195}},"type":"if","locations":[{"start":{"line":16,"column":44},"end":{"line":16,"column":195}},{"start":{"line":16,"column":44},"end":{"line":16,"column":195}}],"line":16},"3":{"loc":{"start":{"line":26,"column":2},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":28,"column":5}},{"start":{"line":26,"column":2},"end":{"line":28,"column":5}}],"line":26},"4":{"loc":{"start":{"line":51,"column":2},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":53,"column":5}},{"start":{"line":51,"column":2},"end":{"line":53,"column":5}}],"line":51},"5":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":4},"end":{"line":67,"column":5}}],"line":65},"6":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{"line":69,"column":4},"end":{"line":71,"column":5}}],"line":69},"7":{"loc":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},{"start":{"line":73,"column":4},"end":{"line":75,"column":5}}],"line":73},"8":{"loc":{"start":{"line":132,"column":2},"end":{"line":134,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":134,"column":5}},{"start":{"line":132,"column":2},"end":{"line":134,"column":5}}],"line":132},"9":{"loc":{"start":{"line":141,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":147,"column":5}},{"start":{"line":141,"column":4},"end":{"line":147,"column":5}}],"line":141},"10":{"loc":{"start":{"line":164,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":168,"column":5}},{"start":{"line":164,"column":4},"end":{"line":168,"column":5}}],"line":164}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":7,"7":0,"8":7,"9":7,"10":1,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":1,"38":1,"39":0,"40":1,"41":1,"42":1,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":0,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1},"f":{"0":3,"1":7,"2":1,"3":0,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0},"b":{"0":[3,0],"1":[3,3],"2":[0,7],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,1],"9":[1,0],"10":[0,0]},"inputSourceMap":{"version":3,"sources":["BlogController.js"],"names":["BlogController","req","res","error","schema","validate","body","status","json","message","details","blog","BlogPost","title","Title","Body","imgLink","ImageLink","save","send","err","findOne","_id","params","id","find","deleteOne","commentSchema","Comment","comment","push","date","Date","username","user","likes","filter","like","toString","length","msg","unshift"],"mappings":"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","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/","sourcesContent":["// const BlogPost = require('../models/BlogModel');\n// // import BlogPost from '../models/BlogModel';\n// const schema = require('../middlewares/BlogValidation');\n// const commentSchema = require('../middlewares/CommentValidation');\n// // import schema from '../middlewares/BlogValidation';\n\nimport BlogPost from '../models/BlogModel.js';\nimport schema from '../middlewares/BlogValidation.js';\nimport commentSchema from '../middlewares/CommentValidation.js'\n\nclass BlogController {\n\n    static post = async (req, res)=>{\n        //Let's validate the inputs.\n        const {error} = schema.validate(req.body);\n        if (error) return res.status(400).json({message : error.details[0].message});   \n\n        const blog = new BlogPost({\n            title: req.body.Title,\n            body: req.body.Body,\n            imgLink: req.body.ImageLink\n        });\n\n        try{\n            await blog.save();\n            res.send(blog);\n        } catch(err){\n            res.status(400).json({message: err});\n        }\n\n    }\n\n    static updatePostById = async (req, res) => {\n\n        //Let's validate the inputs.\n        const {error} = schema.validate(req.body);\n        if (error) return res.status(400).json({message : error.details[0].message});   \n\n        const blog = new BlogPost({\n            title: req.body.Title,\n            body: req.body.Body,\n            imgLink: req.body.ImageLink\n        });\n\n        try{\n            const blog = await BlogPost.findOne({_id: req.params.id});\n            if(req.body.Title){\n                blog.title = req.body.Title;\n            }\n            if(req.body.Body){\n                blog.body = req.body.Body;\n            }\n            if(req.body.ImageLink){\n                blog.imgLink = req.body.ImageLink;\n            }\n            await blog.save();\n            res.send(blog);\n        } catch(err) {\n            res.status(400).json({err: \"Post Doesn\\'t Exist\"});\n        }\n    }\n\n    static getPosts = async (req, res) => {\n        \n        try{\n            const blog = await BlogPost.find();\n            res.status(200).json({ message: \"liste of all articles\", blog });\n        } catch(err){\n            res.status(404).json({message :err});\n        }\n\n    }\n\n    static getPostsById = async (req, res) => {\n\n        try{\n            const blog = await BlogPost.findOne({_id: req.params.id});\n            res.status(200).json(blog);\n        } catch(err){\n            res.status(404).json({err: 'Post Does Not Exist'});\n        }\n    }\n\n    static deletePostById = async (req, res) => {\n        try{\n            await BlogPost.deleteOne({_id: req.params.id});\n            res.status(204).json();\n        } catch(err){\n            res.status(400).json({err: 'Post Does Not Exist'});\n        }\n    }\n\n    static commentPost = async (req, res) => {\n\n        //Let's validate the inputs.\n        const {error} = commentSchema.validate(req.body);\n        if (error) return res.status(400).json({message : error.details[0].message});   \n\n        try{\n            \n            const blog = await BlogPost.findOne({_id: req.params.id});\n            \n            if(req.body.Comment){\n                blog.comment.push({ \n                    comment :req.body.Comment,\n                    date : new Date(),\n                    username : req.user.username\n\n                });\n            }\n            await blog.save();\n            res.status(200).json(blog);\n        } catch(err) {\n            res.status(400).json({err: \"Post Doesn\\'t Exist\"});\n        }\n\n    }\n\n    static likePost = async (req, res) => {\n          \n        try{\n            const blog = await BlogPost.findOne({_id: req.params.id});\n\n            if(blog.likes.filter(like => like.user.toString() === req.user.id).length > 0) {\n                return res.status(400).json({\n                    msg: 'Post Already Liked'\n                });\n            }\n\n            blog.likes.unshift({user : req.user.id});\n\n            await blog.save();\n\n            res.json(blog.likes);\n\n            // if(req.body.Comment){\n            //     blog.comment.push({ \n            //         comment :req.body.Comment,\n            //         date : new Date(),\n\n            //     });\n            // }\n            // await blog.save();\n            // res.send(blog);\n        } catch(err) {\n            res.status(400).send({err: \"Post Doesn\\'t Exist\"});\n        }\n    }\n\n}\n\nexport default BlogController;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f51541b084d1da46ea1c9bfdefb35c0e8f8cc51e","contentHash":"f83a37b33df74098aa35df29d10863dc74af3561b8684e08400ced8e27c0a652"},"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/BlogValidation.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/BlogValidation.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":55}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":15},"end":{"line":17,"column":2}},"5":{"start":{"line":19,"column":15},"end":{"line":19,"column":21}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["BlogValidation.js"],"names":["schema","Joi","object","Title","string","min","trim","required","Body","ImageLink","uri"],"mappings":";;;;;;;AACA;;;;AADA;AAGA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACtBC,EAAAA,KAAK,EAAEF,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB,GAA2BC,QAA3B,EADe;AAEtBC,EAAAA,IAAI,EAAEP,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB,GAA2BC,QAA3B,EAFgB;AAGtBE,EAAAA,SAAS,EAAER,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB,GAA2BI,GAA3B,GAAiCH,QAAjC;AAHW,CAAX,CAAf;;eAMeP,M","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/","sourcesContent":["// const Joi = require('@hapi/joi');\nimport Joi from '@hapi/joi';\n\nconst schema = Joi.object({\n    Title: Joi.string().min(6).trim().required(),\n    Body: Joi.string().min(6).trim().required(),\n    ImageLink: Joi.string().min(6).trim().uri().required()\n});\n\nexport default schema; "]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"99ad0fe89d90083c83554a1590cc93067baebc73","contentHash":"2334952aecb1cc0ffe5354092f197c952f42972f5d7823a7250322b7f96d93ba"},"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/CommentValidation.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/CommentValidation.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":55}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":22},"end":{"line":15,"column":2}},"5":{"start":{"line":17,"column":15},"end":{"line":17,"column":28}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["CommentValidation.js"],"names":["commentSchema","Joi","object","Comment","string","min","trim"],"mappings":";;;;;;;AACA;;;;AADA;AAGA,MAAMA,aAAa,GAAGC,aAAIC,MAAJ,CAAW;AAE7BC,EAAAA,OAAO,EAAGF,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,IAApB;AAFmB,CAAX,CAAtB;;eAKeN,a","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/","sourcesContent":["// const Joi = require('@hapi/joi');\nimport Joi from '@hapi/joi';\n\nconst commentSchema = Joi.object({\n\n    Comment : Joi.string().min(6).trim()\n})\n\nexport default commentSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e6e075ad96ae2bc57f9dcfa58e0b547b8fadf4b","contentHash":"c99659607bbcc9ab3984f2c4605500ff82ac887b14566b79f1fbd8e239568e50"},"/home/wasp/Documents/Andela/Portfolio/API/src/helpers/image.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/helpers/image.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":18},"end":{"line":8,"column":76}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":16},"end":{"line":24,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":23,"column":3}},"6":{"start":{"line":15,"column":20},"end":{"line":15,"column":33}},"7":{"start":{"line":16,"column":27},"end":{"line":16,"column":77}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":29}},"10":{"start":{"line":20,"column":4},"end":{"line":22,"column":7}},"11":{"start":{"line":26,"column":15},"end":{"line":26,"column":24}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":17}},"loc":{"start":{"line":13,"column":36},"end":{"line":24,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1},"f":{"0":1,"1":0},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["image.js"],"names":["imagePost","req","res","fileStr","body","data","uploadResponse","cloudinary","uploader","upload","console","log","send","err","status"],"mappings":";;;;;;;AACA;;;;AADA;AAIA,IAAIA,SAAS,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChC,MAAI;AACA,UAAMC,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASC,IAAzB;AACA,UAAMC,cAAc,GAAG,MAAMC,oBAAWC,QAAX,CAAoBC,MAApB,CAA2BN,OAA3B,CAA7B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACAJ,IAAAA,GAAG,CAACU,IAAJ,CAASN,cAAT;AACH,GALD,CAKE,OAAOO,GAAP,EAAY;AACVX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAG;AAAP,KAArB;AACH;AACJ,CATD;;eAWeb,S","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/helpers/","sourcesContent":["// const cloudinary = require('../config/cloudinary');\nimport cloudinary from '../config/cloudinary.js';\n\n\nlet imagePost = async (req, res) => {\n    try {\n        const fileStr = req.body.data;\n        const uploadResponse = await cloudinary.uploader.upload(fileStr);\n        console.log(uploadResponse);\n        res.send(uploadResponse);\n    } catch (err) {\n        res.status(500).send({err : 'Something went wrong'});\n    }\n}\n\nexport default imagePost;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d3cd1688dde8b35ff602d4a3d9dad1d17e831d7c","contentHash":"2c5e2c9cd6ba20d56bb0d9137ec820f17d9c0792c78bb43a927c0a3c0203fc58"},"/home/wasp/Documents/Andela/Portfolio/API/src/config/cloudinary.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/config/cloudinary.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":19},"end":{"line":5,"column":43}},"2":{"start":{"line":7,"column":0},"end":{"line":11,"column":3}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["cloudinary.js"],"names":["require","config","cloudinary","v2","cloud_name","process","env","CLOUDINARY_NAME","api_key","CLOUDINARY_API_KEY","api_secret","CLOUDINARY_API_SECRET","module","exports"],"mappings":";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,UAAU,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBG,EAAzC;;AACAD,UAAU,CAACD,MAAX,CAAkB;AACdG,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,eADV;AAEdC,EAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,kBAFP;AAGdC,EAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHV,CAAlB;AAMAC,MAAM,CAACC,OAAP,GAAiBX,UAAjB","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/config/","sourcesContent":["require('dotenv').config();\nconst cloudinary = require('cloudinary').v2;\ncloudinary.config({\n    cloud_name: process.env.CLOUDINARY_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\nmodule.exports = cloudinary;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b6ae76ac49469385e4a8676d3c7a518680dcd637","contentHash":"944065091fe375121d7d430708be77d657ef6e436cb30ed34652a4587d48f49f"},"/home/wasp/Documents/Andela/Portfolio/API/src/routes/UsersRoute.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/routes/UsersRoute.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":22},"end":{"line":10,"column":89}},"4":{"start":{"line":12,"column":19},"end":{"line":12,"column":83}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":20,"column":15},"end":{"line":20,"column":40}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":59}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":87}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":57}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":58}},"11":{"start":{"line":30,"column":15},"end":{"line":30,"column":21}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":3},"b":{"0":[2,1],"1":[3,3]},"inputSourceMap":{"version":3,"sources":["UsersRoute.js"],"names":["router","express","Router","post","UsersController","saveUser","get","privateRoute","authAdmin","getUsers","userLogin","AdminLogin"],"mappings":";;;;;;;AAKA;;AAEA;;AACA;;;;AARA;AACA;AACA;AACA;AAGA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAIAF,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBC,wBAAgBC,QAAzC;AACAL,MAAM,CAACM,GAAP,CAAW,QAAX,EAAqBC,qBAAaC,SAAlC,EAA6CJ,wBAAgBK,QAA7D;AACAT,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBC,wBAAgBM,SAAtC,E,CACA;AACA;AACA;;AACAV,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBC,wBAAgBO,UAAtC,E,CACA;;eAEeX,M","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/routes/","sourcesContent":["// const express = require('express');\n// const router = express.Router();\n// const UsersController = require('../controllers/AuthController');\n// const privateRoute = require('../middlewares/verifyToken');\n\nimport express from 'express';\nconst router = express.Router();\nimport UsersController from '../controllers/AuthController.js';\nimport privateRoute from '../middlewares/verifyToken.js';\n\nrouter.post('/register', UsersController.saveUser);\nrouter.get('/users', privateRoute.authAdmin, UsersController.getUsers);\nrouter.post('/login', UsersController.userLogin);\n//Admin Registration Route\n// router.post('/Admin-Register', UsersController.saveAdmin);\n//Admin Login Route\nrouter.post('/admin', UsersController.AdminLogin);\n//Admin Profile\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66ff30f8d447ab4ad96531ad5ab68a9c3b5871ef","contentHash":"a0556ed1cbd59887ffbb1f494226500836ae690b00ba03103d18ce9b8dc96d8b"},"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/AuthController.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/AuthController.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":18},"end":{"line":8,"column":76}},"3":{"start":{"line":10,"column":22},"end":{"line":10,"column":65}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":20},"end":{"line":14,"column":67}},"6":{"start":{"line":16,"column":18},"end":{"line":16,"column":76}},"7":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"8":{"start":{"line":20,"column":44},"end":{"line":20,"column":195}},"9":{"start":{"line":20,"column":62},"end":{"line":20,"column":166}},"10":{"start":{"line":20,"column":176},"end":{"line":20,"column":193}},"11":{"start":{"line":20,"column":196},"end":{"line":20,"column":207}},"12":{"start":{"line":24,"column":0},"end":{"line":56,"column":3}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":55}},"14":{"start":{"line":29,"column":2},"end":{"line":31,"column":5}},"15":{"start":{"line":29,"column":13},"end":{"line":31,"column":5}},"16":{"start":{"line":33,"column":22},"end":{"line":35,"column":4}},"17":{"start":{"line":36,"column":2},"end":{"line":38,"column":5}},"18":{"start":{"line":36,"column":19},"end":{"line":38,"column":5}},"19":{"start":{"line":40,"column":15},"end":{"line":40,"column":48}},"20":{"start":{"line":41,"column":25},"end":{"line":41,"column":76}},"21":{"start":{"line":42,"column":15},"end":{"line":46,"column":4}},"22":{"start":{"line":48,"column":2},"end":{"line":55,"column":3}},"23":{"start":{"line":49,"column":4},"end":{"line":49,"column":22}},"24":{"start":{"line":50,"column":4},"end":{"line":52,"column":7}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":30}},"26":{"start":{"line":58,"column":0},"end":{"line":65,"column":3}},"27":{"start":{"line":59,"column":2},"end":{"line":64,"column":3}},"28":{"start":{"line":60,"column":17},"end":{"line":60,"column":49}},"29":{"start":{"line":61,"column":4},"end":{"line":61,"column":31}},"30":{"start":{"line":63,"column":4},"end":{"line":63,"column":32}},"31":{"start":{"line":67,"column":0},"end":{"line":111,"column":3}},"32":{"start":{"line":71,"column":6},"end":{"line":71,"column":52}},"33":{"start":{"line":72,"column":2},"end":{"line":72,"column":67}},"34":{"start":{"line":72,"column":13},"end":{"line":72,"column":67}},"35":{"start":{"line":74,"column":15},"end":{"line":76,"column":4}},"36":{"start":{"line":77,"column":2},"end":{"line":79,"column":5}},"37":{"start":{"line":77,"column":13},"end":{"line":79,"column":5}},"38":{"start":{"line":81,"column":20},"end":{"line":81,"column":83}},"39":{"start":{"line":82,"column":2},"end":{"line":84,"column":5}},"40":{"start":{"line":82,"column":18},"end":{"line":84,"column":5}},"41":{"start":{"line":96,"column":16},"end":{"line":104,"column":4}},"42":{"start":{"line":106,"column":2},"end":{"line":106,"column":34}},"43":{"start":{"line":107,"column":2},"end":{"line":110,"column":5}},"44":{"start":{"line":113,"column":0},"end":{"line":156,"column":3}},"45":{"start":{"line":117,"column":6},"end":{"line":117,"column":57}},"46":{"start":{"line":118,"column":2},"end":{"line":118,"column":67}},"47":{"start":{"line":118,"column":13},"end":{"line":118,"column":67}},"48":{"start":{"line":120,"column":15},"end":{"line":122,"column":4}},"49":{"start":{"line":123,"column":2},"end":{"line":125,"column":5}},"50":{"start":{"line":123,"column":13},"end":{"line":125,"column":5}},"51":{"start":{"line":128,"column":20},"end":{"line":128,"column":82}},"52":{"start":{"line":129,"column":2},"end":{"line":131,"column":5}},"53":{"start":{"line":129,"column":18},"end":{"line":131,"column":5}},"54":{"start":{"line":143,"column":16},"end":{"line":149,"column":30}},"55":{"start":{"line":151,"column":2},"end":{"line":151,"column":34}},"56":{"start":{"line":152,"column":2},"end":{"line":155,"column":5}},"57":{"start":{"line":158,"column":15},"end":{"line":158,"column":30}},"58":{"start":{"line":159,"column":0},"end":{"line":159,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":31}},"loc":{"start":{"line":18,"column":37},"end":{"line":18,"column":95}},"line":18},"1":{"name":"_defineProperty","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":24}},"loc":{"start":{"line":20,"column":42},"end":{"line":20,"column":209}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":45},"end":{"line":24,"column":46}},"loc":{"start":{"line":24,"column":65},"end":{"line":56,"column":1}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":58,"column":45},"end":{"line":58,"column":46}},"loc":{"start":{"line":58,"column":65},"end":{"line":65,"column":1}},"line":58},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":46},"end":{"line":67,"column":47}},"loc":{"start":{"line":67,"column":66},"end":{"line":111,"column":1}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":113,"column":47},"end":{"line":113,"column":48}},"loc":{"start":{"line":113,"column":67},"end":{"line":156,"column":1}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":92}},"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}],"line":18},"1":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":67}},"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}],"line":18},"2":{"loc":{"start":{"line":20,"column":44},"end":{"line":20,"column":195}},"type":"if","locations":[{"start":{"line":20,"column":44},"end":{"line":20,"column":195}},{"start":{"line":20,"column":44},"end":{"line":20,"column":195}}],"line":20},"3":{"loc":{"start":{"line":29,"column":2},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":31,"column":5}},{"start":{"line":29,"column":2},"end":{"line":31,"column":5}}],"line":29},"4":{"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":38,"column":5}},{"start":{"line":36,"column":2},"end":{"line":38,"column":5}}],"line":36},"5":{"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":67}},"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":67}},{"start":{"line":72,"column":2},"end":{"line":72,"column":67}}],"line":72},"6":{"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":79,"column":5}},{"start":{"line":77,"column":2},"end":{"line":79,"column":5}}],"line":77},"7":{"loc":{"start":{"line":82,"column":2},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":84,"column":5}},{"start":{"line":82,"column":2},"end":{"line":84,"column":5}}],"line":82},"8":{"loc":{"start":{"line":118,"column":2},"end":{"line":118,"column":67}},"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":67}},{"start":{"line":118,"column":2},"end":{"line":118,"column":67}}],"line":118},"9":{"loc":{"start":{"line":123,"column":2},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":125,"column":5}},{"start":{"line":123,"column":2},"end":{"line":125,"column":5}}],"line":123},"10":{"loc":{"start":{"line":129,"column":2},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":131,"column":5}},{"start":{"line":129,"column":2},"end":{"line":131,"column":5}}],"line":129}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":4,"8":4,"9":0,"10":4,"11":4,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":1,"27":1,"28":1,"29":1,"30":0,"31":1,"32":2,"33":2,"34":0,"35":2,"36":2,"37":1,"38":1,"39":1,"40":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":0,"48":1,"49":1,"50":0,"51":1,"52":1,"53":1,"54":0,"55":0,"56":0,"57":1,"58":1},"f":{"0":4,"1":4,"2":1,"3":1,"4":2,"5":1},"b":{"0":[2,2],"1":[4,4],"2":[0,4],"3":[0,1],"4":[0,1],"5":[0,2],"6":[1,1],"7":[0,1],"8":[0,1],"9":[0,1],"10":[1,0]},"inputSourceMap":{"version":3,"sources":["AuthController.js"],"names":["UsersController","req","res","error","body","status","json","message","details","emailExists","User","findOne","email","Email","salt","bcrypt","genSalt","hashedPassword","hash","Password","user","username","UserName","password","save","_id","err","send","find","validPass","compare","token","jwt","sign","id","role","process","env","TOKEN_SECRET","expiresIn","header","success","accessToken","config","adminAccountPassword"],"mappings":"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","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/controllers/","sourcesContent":["// const User = require('../models/UsersModel');\n// // const schema = require('../middlewares/UserValidation');\n// const { registerValidation , loginValidation, registerAdminValidation, loginAdminValidation} = require('../middlewares/UserValidation');\n// const bcrypt = require('bcrypt');\n// const jwt = require('jsonwebtoken');\n\n// const config = require('../config/production');\n\nimport User from '../models/UsersModel.js';\nimport { registerValidation , loginValidation, registerAdminValidation, loginAdminValidation} from '../middlewares/UserValidation.js';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nimport config from '../config/production.js';\n\n\nclass UsersController {\n\n    static saveUser = async (req, res) => {\n\n        //Let's validate the inputs.\n        const {error} = registerValidation(req.body);\n        if (error) return res.status(400).json({message : error.details[0].message});  \n        \n        //check if a user is in the database\n        const emailExists = await User.findOne({email: req.body.Email});\n        if(emailExists) return res.status(400).json({message:'Email already Exists'});\n\n        //Hash the Password\n        const salt = await bcrypt.genSalt(10);\n        const hashedPassword = await bcrypt.hash(req.body.Password, salt);\n\n        const user = new User({\n            username : req.body.UserName,\n            email : req.body.Email,\n            password : hashedPassword\n        });\n\n        try {\n            await user.save();\n            res.status(200).json({user: user._id});\n        } catch (err) {\n            res.status(400).send(err);\n        }\n\n    }\n\n    static getUsers = async (req, res) => {\n\n        try {\n            const user = await User.find();\n            res.status(200).json(user);\n        } catch (error) {\n            res.status(404).send(error);\n        }\n\n    }\n\n    static userLogin = async (req, res) => {\n\n        //Let's validate the inputs.\n        const {error} = loginValidation(req.body);\n        if (error) return res.status(400).send(error.details[0].message); \n\n            //check if a email is in the database\n            const user = await User.findOne({email: req.body.Email});\n            if(!user) return res.status(400).json({message:'Invalid Email Plz Try Again!'});\n\n            //check if the password is correct.\n            const validPass = await bcrypt.compare(req.body.Password, user.password);\n            if(!validPass) return res.status(400).json({message:'Invalid Password Plz Try Again!'});\n\n            // do the database authentication here, with user name and password combination.\n            // const token = jwt.sign({_id: user.id}, config.secret, { expiresIn: config.tokenLife})\n            // const refreshToken = jwt.sign(user, config.refreshTokenSecret, { expiresIn: config.refreshTokenLife})\n            // const response = {\n            //     \"status\": \"Logged in\",\n            //     \"token\": token,\n            //     \"refreshToken\": refreshToken,\n            // }\n            // tokenList[refreshToken] = response\n            // res.status(200).json(response);\n\n\n            //create and Assign a token\n            const token = jwt.sign({ user : {id: user.id, role: user.role, username : user.username}}, process.env.TOKEN_SECRET, {expiresIn:3600});\n            res.header('auth-token', token);\n\n            res.status(200).json({success: 'Logged In Successfully :', accessToken: token});\n\n    }\n\n\n    //ADMIN SIDE\n    \n    // static saveAdmin = async (req, res) => {\n\n    //     //Let's validate the inputs.\n    //     const {error} = registerAdminValidation(req.body);\n    //     if (error) return res.status(400).send(error.details[0].message);  \n        \n    //     //check if a admin is in the database\n    //     const emailExists = await User.findOne({email: req.body.Email});\n    //     if(emailExists) return res.status(400).send('Admin Email already Exists');\n\n    //     //Hash the Password\n    //     const salt = await bcrypt.genSalt(10);\n    //     const hashedPassword = await bcrypt.hash(req.body.Password, salt);\n\n    //     const user = new User({\n    //         username : req.body.UserName,\n    //         email : req.body.Email,\n    //         password : hashedPassword,\n    //         role : 'admin'\n    //     });\n\n    //     try {\n    //         await user.save();\n    //         res.send({user: user._id});\n    //     } catch (err) {\n    //         res.status(400).send(err);\n    //     }\n\n    // }\n\n    static AdminLogin = async (req, res) => {\n\n        //Let's validate the inputs.\n        const {error} = loginAdminValidation(req.body);\n        if (error) return res.status(400).send(error.details[0].message); \n\n            //check if a email is in the database\n            const user = await User.findOne({email: req.body.Email});\n            if(!user) return res.status(400).json({message:'Invalid Admin Email Plz Try Again!'});\n\n            //check if the password is correct.\n            // const validPass = await bcrypt.compare(req.body.Password, user.password);\n            const validPass = req.body.Password === config.adminAccountPassword;\n            if(!validPass) return res.status(400).json({message :'Invalid Admin Password Plz Try Again!'});\n\n            // do the database authentication here, with user name and password combination.\n            // const token = jwt.sign({_id: user.id}, config.secret, { expiresIn: config.tokenLife})\n            // const refreshToken = jwt.sign(user, config.refreshTokenSecret, { expiresIn: config.refreshTokenLife})\n            // const response = {\n            //     \"status\": \"Logged in\",\n            //     \"token\": token,\n            //     \"refreshToken\": refreshToken,\n            // }\n            // tokenList[refreshToken] = response\n            // res.status(200).json(response);\n\n\n            //create and Assign a token\n            \n            const token = jwt.sign({ user : {id: user.id, role: user.role, username : user.username}}, process.env.TOKEN_SECRET);\n            res.header('auth-token', token);\n\n            res.status(200).json({success: 'Admin Logged In Successfully :)', accessToken: token});\n\n    }\n\n}\n\nexport default UsersController;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fe3eacb57e7c24dc54eabae3fe79781b9ca49e84","contentHash":"c7d25fc34e756c5af8f6dfb825022511ad9be044cb282185596bfb1838c51e28"},"/home/wasp/Documents/Andela/Portfolio/API/src/models/UsersModel.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/models/UsersModel.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":19},"end":{"line":40,"column":2}},"5":{"start":{"line":42,"column":15},"end":{"line":42,"column":59}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["UsersModel.js"],"names":["userSchema","mongoose","Schema","username","type","required","min","max","email","password","role","default","enum","date","Date","now","model"],"mappings":";;;;;;;AACA;;;;AADA;AAGA,MAAMA,UAAU,GAAGC,kBAASC,MAAT,CAAgB;AAC/BC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,GAAG,EAAE,CAHE;AAIPC,IAAAA,GAAG,EAAE;AAJE,GADoB;AAQ/BC,EAAAA,KAAK,EAAG;AACJJ,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,GAAG,EAAE,CAHD;AAIJC,IAAAA,GAAG,EAAE;AAJD,GARuB;AAe/BE,EAAAA,QAAQ,EAAG;AACPL,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPE,IAAAA,GAAG,EAAE;AAHE,GAfoB;AAqB/BG,EAAAA,IAAI,EAAG;AACHN,IAAAA,IAAI,EAAE,QADH;AAEHO,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,OAAR;AAHH,GArBwB;AA2B/BC,EAAAA,IAAI,EAAG;AACHT,IAAAA,IAAI,EAAGU,IADJ;AAEHH,IAAAA,OAAO,EAAEG,IAAI,CAACC;AAFX;AA3BwB,CAAhB,CAAnB;;eAkCed,kBAASe,KAAT,CAAe,OAAf,EAAwBhB,UAAxB,C","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/models/","sourcesContent":["// const mongoose = require('mongoose');\nimport mongoose from 'mongoose';\n\nconst userSchema = mongoose.Schema({\n    username : {\n        type: 'string',\n        required: true,\n        min: 6,\n        max: 255\n    },\n\n    email : {\n        type: 'string',\n        required: true,\n        min: 6,\n        max: 255\n    },\n\n    password : {\n        type: 'string',\n        required: true,\n        max: 1024\n    },\n\n    role : {\n        type: 'string',\n        default: 'user',\n        enum: ['user','admin']\n    },\n\n    date : {\n        type : Date,\n        default: Date.now\n    }\n\n});\n\nexport default mongoose.model('Users', userSchema);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5031818a30d510b38136c9a42c26301e7936e9aa","contentHash":"2a2cc17b48bb9d64bf5af5449a3abea39f8db81c1e95e046ab360e304bd08d78"},"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/UserValidation.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/UserValidation.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":127}},"2":{"start":{"line":8,"column":11},"end":{"line":8,"column":55}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":13,"column":27},"end":{"line":20,"column":1}},"5":{"start":{"line":15,"column":2},"end":{"line":19,"column":28}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"7":{"start":{"line":24,"column":24},"end":{"line":30,"column":1}},"8":{"start":{"line":26,"column":2},"end":{"line":29,"column":28}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"10":{"start":{"line":34,"column":32},"end":{"line":41,"column":1}},"11":{"start":{"line":36,"column":2},"end":{"line":40,"column":28}},"12":{"start":{"line":43,"column":0},"end":{"line":43,"column":58}},"13":{"start":{"line":45,"column":29},"end":{"line":51,"column":1}},"14":{"start":{"line":47,"column":2},"end":{"line":50,"column":28}},"15":{"start":{"line":57,"column":0},"end":{"line":57,"column":52}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":27},"end":{"line":13,"column":28}},"loc":{"start":{"line":13,"column":35},"end":{"line":20,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":24},"end":{"line":24,"column":25}},"loc":{"start":{"line":24,"column":32},"end":{"line":30,"column":1}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":32},"end":{"line":34,"column":33}},"loc":{"start":{"line":34,"column":40},"end":{"line":41,"column":1}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":29},"end":{"line":45,"column":30}},"loc":{"start":{"line":45,"column":37},"end":{"line":51,"column":1}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":1},"f":{"0":1,"1":1,"2":2,"3":0,"4":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["UserValidation.js"],"names":["registerValidation","data","schema","Joi","object","UserName","string","min","max","trim","required","Email","email","Password","validate","loginValidation","registerAdminValidation","loginAdminValidation"],"mappings":";;;;;;;AACA;;;;AADA;AAIO,MAAMA,kBAAkB,GAAIC,IAAD,IAAU;AACxC,MAAIC,MAAJ;AACA,SAAOA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACvBC,IAAAA,QAAQ,EAAEF,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,GAAoCC,QAApC,EADa;AAEvBC,IAAAA,KAAK,EAAER,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,GAAoCC,QAApC,GAA+CE,KAA/C,EAFgB;AAGvBC,IAAAA,QAAQ,EAAEV,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBE,IAApB,GAA2BC,QAA3B;AAHa,GAAX,EAIbI,QAJa,CAIJb,IAJI,EAIEC,MAJF,CAAhB,CAFwC,CAQxC;AAEH,CAVM;;;;AAYA,MAAMa,eAAe,GAAId,IAAD,IAAU;AACrC,MAAIC,MAAJ;AACA,SAAOA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACvBO,IAAAA,KAAK,EAAER,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,GAAoCC,QAApC,GAA+CE,KAA/C,EADgB;AAEvBC,IAAAA,QAAQ,EAAEV,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBE,IAApB,GAA2BC,QAA3B;AAFa,GAAX,EAGbI,QAHa,CAGJb,IAHI,EAGEC,MAHF,CAAhB;AAKH,CAPM;;;;AASA,MAAMc,uBAAuB,GAAIf,IAAD,IAAU;AAC7C,MAAIC,MAAJ;AACA,SAAOA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACvBC,IAAAA,QAAQ,EAAEF,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,GAAoCC,QAApC,EADa;AAEvBC,IAAAA,KAAK,EAAER,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,GAAoCC,QAApC,GAA+CE,KAA/C,EAFgB;AAGvBC,IAAAA,QAAQ,EAAEV,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBE,IAApB,GAA2BC,QAA3B;AAHa,GAAX,EAIbI,QAJa,CAIJb,IAJI,EAIEC,MAJF,CAAhB,CAF6C,CAQ7C;AAEH,CAVM;;;;AAYA,MAAMe,oBAAoB,GAAIhB,IAAD,IAAU;AAC1C,MAAIC,MAAJ;AACA,SAAOA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACvBO,IAAAA,KAAK,EAAER,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,GAAoCC,QAApC,GAA+CE,KAA/C,EADgB;AAEvBC,IAAAA,QAAQ,EAAEV,aAAIG,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBE,IAApB,GAA2BC,QAA3B;AAFa,GAAX,EAGbI,QAHa,CAGJb,IAHI,EAGEC,MAHF,CAAhB;AAKH,CAPM,C,CASP;AACA;AAEA;AACA","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/middlewares/","sourcesContent":["// const Joi = require('@hapi/joi');\nimport Joi from '@hapi/joi';\n\n\nexport const registerValidation = (data) => {\n    let schema;\n    return schema = Joi.object({\n        UserName: Joi.string().min(6).max(255).trim().required(),\n        Email: Joi.string().min(6).max(255).trim().required().email(),\n        Password: Joi.string().min(6).trim().required()\n    }).validate(data, schema);\n\n    // return schema.validate(data, schema);\n\n}\n\nexport const loginValidation = (data) => {\n    let schema;\n    return schema = Joi.object({\n        Email: Joi.string().min(6).max(255).trim().required().email(),\n        Password: Joi.string().min(6).trim().required()\n    }).validate(data, schema);\n\n}\n\nexport const registerAdminValidation = (data) => {\n    let schema;\n    return schema = Joi.object({\n        UserName: Joi.string().min(6).max(255).trim().required(),\n        Email: Joi.string().min(6).max(255).trim().required().email(),\n        Password: Joi.string().min(6).trim().required()\n    }).validate(data, schema);\n\n    // return schema.validate(data, schema);\n\n}\n\nexport const loginAdminValidation = (data) => {\n    let schema;\n    return schema = Joi.object({\n        Email: Joi.string().min(6).max(255).trim().required().email(),\n        Password: Joi.string().min(6).trim().required()\n    }).validate(data, schema);\n\n}\n\n// module.exports.registerValidation = registerValidation;\n// module.exports.loginValidation = loginValidation;\n\n// module.exports.registerAdminValidation = registerAdminValidation;\n// module.exports.loginAdminValidation = loginAdminValidation;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dab09e366e01bba0e20d3ecb5b1fe06ca46a15b7","contentHash":"751264cab1fb8ed55b3fbf039622da400ca9bd20e2f89539a27f4ee6bd528e29"},"/home/wasp/Documents/Andela/Portfolio/API/src/config/production.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/config/production.js","statementMap":{"0":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}},"2":{"start":{"line":11,"column":15},"end":{"line":21,"column":1}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":53}},"type":"binary-expr","locations":[{"start":{"line":17,"column":17},"end":{"line":17,"column":43}},{"start":{"line":17,"column":47},"end":{"line":17,"column":53}}],"line":17},"1":{"loc":{"start":{"line":18,"column":24},"end":{"line":18,"column":70}},"type":"binary-expr","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":58}},{"start":{"line":18,"column":62},"end":{"line":18,"column":70}}],"line":18},"2":{"loc":{"start":{"line":19,"column":21},"end":{"line":19,"column":73}},"type":"binary-expr","locations":[{"start":{"line":19,"column":21},"end":{"line":19,"column":52}},{"start":{"line":19,"column":56},"end":{"line":19,"column":73}}],"line":19},"3":{"loc":{"start":{"line":20,"column":24},"end":{"line":20,"column":72}},"type":"binary-expr","locations":[{"start":{"line":20,"column":24},"end":{"line":20,"column":58}},{"start":{"line":20,"column":62},"end":{"line":20,"column":72}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"sources":["production.js"],"names":["db","process","env","DB_CONNECT","dir","fileDir","sessionSecret","SESSION_SECRET","adminAccountUsername","ADMIN_ACCOUNT_USERNAME","adminAccountEmail","ADMIN_ACCOUNT_EMAIL","adminAccountPassword","ADMIN_ACCOUNT_PASSWORD"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;;;;;eAEe;AACXA,EAAAA,EAAE,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADL;AAEX;AACA;AACAC,EAAAA,GAAG,EAAE,SAJM;AAKXC,EAAAA,OAAO,EAAE,QALE;AAMXC,EAAAA,aAAa,EAAEL,OAAO,CAACC,GAAR,CAAYK,cAAZ,IAA8B,MANlC;AAOXC,EAAAA,oBAAoB,EAAEP,OAAO,CAACC,GAAR,CAAYO,sBAAZ,IAAsC,QAPjD;AAQXC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,mBAAZ,IAAmC,iBAR3C;AASXC,EAAAA,oBAAoB,EAAEX,OAAO,CAACC,GAAR,CAAYW,sBAAZ,IAAsC;AATjD,C","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/config/","sourcesContent":["'use strict';\n\n/**\n * Set the 'production' environment configuration object\n * @link http://docs.mongolab.com/migrating/\n */\n\nexport default {\n    db: process.env.DB_CONNECT,\n    // set this to build\n    // dir: 'build/',\n    dir: 'client/',\n    fileDir: 'files/',\n    sessionSecret: process.env.SESSION_SECRET || 'MEAN',\n    adminAccountUsername: process.env.ADMIN_ACCOUNT_USERNAME || 'Israel',\n    adminAccountEmail: process.env.ADMIN_ACCOUNT_EMAIL || 'admin@admin.com',\n    adminAccountPassword: process.env.ADMIN_ACCOUNT_PASSWORD || 'password'\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c68607f83a1a552244c1abebb4c42313e0295a4a","contentHash":"9519aeb0f5a3ec33a59a67ed0b72a2875a065ee151fb074eba56ee3f41eb77bc"},"/home/wasp/Documents/Andela/Portfolio/API/src/config/init.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/config/init.js","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"2":{"start":{"line":10,"column":18},"end":{"line":10,"column":68}},"3":{"start":{"line":12,"column":18},"end":{"line":12,"column":76}},"4":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"5":{"start":{"line":17,"column":2},"end":{"line":42,"column":5}},"6":{"start":{"line":19,"column":4},"end":{"line":41,"column":7}},"7":{"start":{"line":22,"column":6},"end":{"line":22,"column":25}},"8":{"start":{"line":22,"column":15},"end":{"line":22,"column":25}},"9":{"start":{"line":24,"column":6},"end":{"line":40,"column":7}},"10":{"start":{"line":28,"column":23},"end":{"line":33,"column":10}},"11":{"start":{"line":34,"column":8},"end":{"line":37,"column":11}},"12":{"start":{"line":35,"column":10},"end":{"line":35,"column":29}},"13":{"start":{"line":35,"column":19},"end":{"line":35,"column":29}},"14":{"start":{"line":36,"column":10},"end":{"line":36,"column":20}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":18}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"_default","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":17}},"loc":{"start":{"line":16,"column":20},"end":{"line":43,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":21},"end":{"line":17,"column":22}},"loc":{"start":{"line":17,"column":40},"end":{"line":42,"column":3}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":7},"end":{"line":21,"column":8}},"loc":{"start":{"line":21,"column":28},"end":{"line":41,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":22},"end":{"line":34,"column":23}},"loc":{"start":{"line":34,"column":37},"end":{"line":37,"column":9}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":22,"column":6},"end":{"line":22,"column":25}},"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":25}},{"start":{"line":22,"column":6},"end":{"line":22,"column":25}}],"line":22},"3":{"loc":{"start":{"line":24,"column":6},"end":{"line":40,"column":7}},"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":40,"column":7}},{"start":{"line":24,"column":6},"end":{"line":40,"column":7}}],"line":24},"4":{"loc":{"start":{"line":35,"column":10},"end":{"line":35,"column":29}},"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":29}},{"start":{"line":35,"column":10},"end":{"line":35,"column":29}}],"line":35}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"f":{"0":2,"1":1,"2":1,"3":1,"4":0},"b":{"0":[2,0],"1":[2,2],"2":[0,1],"3":[0,1],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["init.js"],"names":["Promise","resolve","User","findOne","email","config","adminAccountEmail","err","user","newAdmin","username","adminAccountUsername","password","adminAccountPassword","role","save"],"mappings":"AAAA,a,CAEA;AACA;AACA;;;;;;;AAEA;;AACA;;;;AAEe,oBAAW;AACtB,SAAO,IAAIA,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACjC;AACAC,wBAAKC,OAAL,CAAa;AAAEC,MAAAA,KAAK,EAAEC,oBAAOC;AAAhB,KAAb,EAAiD,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACjE,UAAID,GAAJ,EAAS,MAAMA,GAAN;;AACT,UAAI,CAACC,IAAL,EAAW;AACP;AACA;AACA;AACA,YAAIC,QAAQ,GAAG,IAAIP,mBAAJ,CAAS;AACpBQ,UAAAA,QAAQ,EAAEL,oBAAOM,oBADG;AAEpBP,UAAAA,KAAK,EAAEC,oBAAOC,iBAFM;AAGpBM,UAAAA,QAAQ,EAAEP,oBAAOQ,oBAHG;AAIpBC,UAAAA,IAAI,EAAE;AAJc,SAAT,CAAf;AAMAL,QAAAA,QAAQ,CAACM,IAAT,CAAc,UAASR,GAAT,EAAc;AACxB,cAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTN,UAAAA,OAAO;AACV,SAHD;AAIH,OAdD,MAcO;AACHA,QAAAA,OAAO;AACV;AACJ,KAnBD;AAoBH,GAtBM,CAAP;AAuBH;;AAAA","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/config/","sourcesContent":["'use strict';\n\n// var config = require('./production');\n// const User = require('../models/UsersModel')\n// const bcrypt = require('bcrypt')\n\nimport config from './production.js';\nimport User from '../models/UsersModel.js';\n\nexport default function() {\n    return new Promise(function(resolve) {\n        // var User = db.model('User');\n        User.findOne({ email: config.adminAccountEmail}, function(err, user) {\n            if (err) throw err;\n            if (!user) {\n                //Hash the Password\n                // const salt = bcrypt.genSalt(10);\n                // const hashedPassword = bcrypt.hash(config.adminAccountPassword, salt);\n                var newAdmin = new User({\n                    username: config.adminAccountUsername,\n                    email: config.adminAccountEmail,\n                    password: config.adminAccountPassword,\n                    role: 'admin'\n                });\n                newAdmin.save(function(err) {\n                    if (err) throw err;\n                    resolve();\n                })\n            } else {\n                resolve();\n            }\n        })\n    })\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"95b305b5496d5d1adf3dca02875b4ba7f75ef73e","contentHash":"396672342fa0e035f1eaf3b5f7519b0bfb63c35c4c664276b674a6143a93bcad"},"/home/wasp/Documents/Andela/Portfolio/API/src/openDoc.js":{"path":"/home/wasp/Documents/Andela/Portfolio/API/src/openDoc.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":721,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["openDoc.js"],"names":["module","exports","openapi","info","version","title","description","contact","name","email","license","url","servers","tags","paths","get","summary","operationId","responses","content","schema","$ref","example","id","body","imgLink","parameters","in","required","type","post","security","ApiKey","requestBody","Title","Body","ImageLink","delete","patch","put","Comment","FullName","Email","Messages","UserName","Password","components","schemas","Blog","properties","Contact","User","securitySchemes"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAE,OADI;AAEbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,OADL;AAEJC,IAAAA,KAAK,EAAE,kBAFH;AAGJC,IAAAA,WAAW,EAAE,gCAHT;AAIJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAJL;AAQJC,IAAAA,OAAO,EAAE;AACPF,MAAAA,IAAI,EAAE,YADC;AAEPG,MAAAA,GAAG,EAAE;AAFE;AARL,GAFO;AAgBb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,EAAE,CACP;AACED,IAAAA,GAAG,EAAE,wBADP;AAEEL,IAAAA,WAAW,EAAE;AAFf,GADO,EAKP;AACEK,IAAAA,GAAG,EAAE,kDADP;AAEEL,IAAAA,WAAW,EAAE;AAFf,GALO,CA7BI;AAyCbO,EAAAA,IAAI,EAAE,CACJ;AACEL,IAAAA,IAAI,EAAE;AADR,GADI,CAzCO;AA8CbM,EAAAA,KAAK,EAAE;AACL,oBAAgB;AACdC,MAAAA,GAAG,EAAE;AACHF,QAAAA,IAAI,EAAE,CAAC,UAAD,CADH;AAEHG,QAAAA,OAAO,EAAE,mCAFN;AAGHC,QAAAA,WAAW,EAAE,UAHV;AAKHC,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,uBADR;AAELa,YAAAA,OAAO,EAAE;AACP,kCAAoB;AAClBC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAE;AADA,iBADU;AAIlBC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,EAAE,EAAE,UADG;AAEPlB,kBAAAA,KAAK,EAAE,wBAFA;AAGPmB,kBAAAA,IAAI,EAAE,sBAHC;AAIPC,kBAAAA,OAAO,EAAE;AAJF;AAJS;AADb;AAFJ;AADE;AALR;AADS,KADX;AA8BL,yBAAqB;AACnBV,MAAAA,GAAG,EAAE;AACHF,QAAAA,IAAI,EAAE,CAAC,UAAD,CADH;AAEHG,QAAAA,OAAO,EAAE,6BAFN;AAGHU,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,aAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CAHT;AAaHX,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,4BADR;AAELa,YAAAA,OAAO,EAAE;AACP,kCAAoB;AAClBC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAE;AADA,iBADU;AAIlBC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,EAAE,EAAE,UADG;AAEPlB,kBAAAA,KAAK,EAAE,wBAFA;AAGPmB,kBAAAA,IAAI,EAAE,sBAHC;AAIPC,kBAAAA,OAAO,EAAE;AAJF;AAJS;AADb;AAFJ,WADE;AAiBT,iBAAO;AACLnB,YAAAA,WAAW,EAAE;AADR;AAjBE;AAbR;AADc,KA9BhB;AAoEL,qBAAiB;AACfwB,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADN;AAMJnB,QAAAA,IAAI,EAAE,CAAC,UAAD,CANF;AAOJP,QAAAA,WAAW,EAAE,cAPT;AAQJoB,QAAAA,UAAU,EAAE,EARR;AASJO,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA,eADU;AAIlBC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,KAAK,EAAE,wBADA;AAEPC,gBAAAA,IAAI,EAAE,sBAFC;AAGPC,gBAAAA,SAAS,EAAE;AAHJ;AAJS;AADb,WADE;AAaXR,UAAAA,QAAQ,EAAE;AAbC,SATT;AAwBJV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR,WAJE;AAOT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAPE;AAxBP;AADS,KApEZ;AAuHL,4BAAwB;AACtB+B,MAAAA,MAAM,EAAE;AACNN,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADJ;AAMNnB,QAAAA,IAAI,EAAE,CAAC,UAAD,CANA;AAONG,QAAAA,OAAO,EAAE,4BAPH;AAQNU,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,aAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CARN;AAkBNX,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,oCADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdK,WADE;AAiBT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR,WAjBE;AAoBT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR;AApBE;AAlBL;AADc,KAvHnB;AAqKL,4BAAwB;AACtBgC,MAAAA,KAAK,EAAE;AACLP,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADL;AAMLnB,QAAAA,IAAI,EAAE,CAAC,UAAD,CAND;AAOLP,QAAAA,WAAW,EAAE,cAPR;AAQLoB,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,aAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CARP;AAkBLI,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA,eADU;AAIlBC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,KAAK,EAAE,wBADA;AAEPC,gBAAAA,IAAI,EAAE,sBAFC;AAGPC,gBAAAA,SAAS,EAAE;AAHJ;AAJS;AADb,WADE;AAaXR,UAAAA,QAAQ,EAAE;AAbC,SAlBR;AAiCLV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR,WAJE;AAOT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAPE;AAjCN;AADe,KArKnB;AAiOL,yBAAqB;AACnBiC,MAAAA,GAAG,EAAE;AACHR,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADP;AAMHnB,QAAAA,IAAI,EAAE,CAAC,UAAD,CANH;AAOHP,QAAAA,WAAW,EAAE,mBAPV;AAQHoB,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,aAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CART;AAkBHI,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA,eADU;AAIlBC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,OAAO,EAAE;AADF;AAJS;AADb,WADE;AAWXZ,UAAAA,QAAQ,EAAE;AAXC,SAlBV;AA+BHV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAKT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AALE;AA/BR;AADc,KAjOhB;AAyRL,sBAAkB;AAChBiC,MAAAA,GAAG,EAAE;AACHR,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADP;AAMHnB,QAAAA,IAAI,EAAE,CAAC,UAAD,CANH;AAOHP,QAAAA,WAAW,EAAE,aAPV;AAQHoB,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,aAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CART;AAkBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAJE;AA/BR;AADW,KAzRb;AAgVL,wBAAoB;AAClBwB,MAAAA,IAAI,EAAE;AACJjB,QAAAA,IAAI,EAAE,CAAC,aAAD,CADF;AAEJP,QAAAA,WAAW,EAAE,sBAFT;AAGJ2B,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA,eADU;AAIlBC,cAAAA,OAAO,EAAE;AACPmB,gBAAAA,QAAQ,EAAE,qBADH;AAEPC,gBAAAA,KAAK,EAAE,qBAFA;AAGPC,gBAAAA,QAAQ,EAAE;AAHH;AAJS;AADb,WADE;AAaXf,UAAAA,QAAQ,EAAE;AAbC,SAHT;AAkBJV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAJE;AAlBP;AADY,KAhVf;AA0XL,oBAAgB;AACdS,MAAAA,GAAG,EAAE;AACHgB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADP;AAMHnB,QAAAA,IAAI,EAAE,CAAC,aAAD,CANH;AAOHG,QAAAA,OAAO,EAAE,qCAPN;AAQHE,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,yBADR;AAELa,YAAAA,OAAO,EAAE;AACP,kCAAoB;AAClBC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAE;AADA,iBADU;AAIlBC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,EAAE,EAAE,UADG;AAEPkB,kBAAAA,QAAQ,EAAE,qBAFH;AAGPC,kBAAAA,KAAK,EAAE,qBAHA;AAIPC,kBAAAA,QAAQ,EAAE;AAJH;AAJS;AADb;AAFJ,WADE;AAkBT,iBAAO;AACLrC,YAAAA,WAAW,EAAE;AADR;AAlBE;AARR;AADS,KA1XX;AA8ZL,yBAAqB;AACnBS,MAAAA,GAAG,EAAE;AACHgB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADP;AAMHnB,QAAAA,IAAI,EAAE,CAAC,aAAD,CANH;AAOHG,QAAAA,OAAO,EAAE,iCAPN;AAQHU,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,cAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CART;AAkBHX,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,4BADR;AAELa,YAAAA,OAAO,EAAE;AACP,kCAAoB;AAClBC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAE;AADA,iBADU;AAIlBC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,EAAE,EAAE,UADG;AAEPkB,kBAAAA,QAAQ,EAAE,qBAFH;AAGPC,kBAAAA,KAAK,EAAE,qBAHA;AAIPC,kBAAAA,QAAQ,EAAE;AAJH;AAJS;AADb;AAFJ,WADE;AAiBT,iBAAO;AACLrC,YAAAA,WAAW,EAAE;AADR,WAjBE;AAoBT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR;AApBE;AAlBR;AADc,KA9ZhB;AA4cL,+BAA2B;AACzB+B,MAAAA,MAAM,EAAE;AACNN,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADJ;AAMNnB,QAAAA,IAAI,EAAE,CAAC,aAAD,CANA;AAONG,QAAAA,OAAO,EAAE,6BAPH;AAQNU,QAAAA,UAAU,EAAE,CAAC;AACXlB,UAAAA,IAAI,EAAE,IADK;AAEXmB,UAAAA,EAAE,EAAE,MAFO;AAGXC,UAAAA,QAAQ,EAAG,IAHA;AAIXtB,UAAAA,WAAW,EAAG,cAJH;AAKXc,UAAAA,MAAM,EAAE;AACNS,YAAAA,IAAI,EAAE;AADA;AALG,SAAD,CARN;AAkBNX,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,qCADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdK,WADE;AAiBT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR,WAjBE;AAoBT,iBAAO;AACLA,YAAAA,WAAW,EAAE;AADR;AApBE;AAlBL;AADiB,KA5ctB;AA0fL,qBAAiB;AACfwB,MAAAA,IAAI,EAAE;AACJjB,QAAAA,IAAI,EAAE,CAAC,cAAD,CADF;AAEJP,QAAAA,WAAW,EAAE,gBAFT;AAGJ2B,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA,eADU;AAIlBC,cAAAA,OAAO,EAAE;AACPsB,gBAAAA,QAAQ,EAAE,qBADH;AAEPF,gBAAAA,KAAK,EAAE,qBAFA;AAGPG,gBAAAA,QAAQ,EAAE;AAHH;AAJS;AADb,WADE;AAaXjB,UAAAA,QAAQ,EAAE;AAbC,SAHT;AAkBJV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAJE;AAlBP;AADS,KA1fZ;AAoiBL,kBAAc;AACZS,MAAAA,GAAG,EAAE;AACHgB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,MAAM,EAAE;AADV,SADQ,CADP;AAMHnB,QAAAA,IAAI,EAAE,CAAC,OAAD,CANH;AAOHG,QAAAA,OAAO,EAAE,mCAPN;AAQHE,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE,uBADR;AAELa,YAAAA,OAAO,EAAE;AACP,kCAAoB;AAClBC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAE;AADA;AADU;AADb;AAFJ,WADE;AAYT,iBAAO;AACLf,YAAAA,WAAW,EAAE;AADR;AAZE;AARR;AADO,KApiBT;AAkkBL,kBAAc;AACZwB,MAAAA,IAAI,EAAE;AACJjB,QAAAA,IAAI,EAAE,CAAC,OAAD,CADF;AAEJP,QAAAA,WAAW,EAAE,QAFT;AAGJ2B,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA,eADU;AAIlBC,cAAAA,OAAO,EAAE;AACPoB,gBAAAA,KAAK,EAAE,qBADA;AAEPG,gBAAAA,QAAQ,EAAE;AAFH;AAJS;AADb,WADE;AAYXjB,UAAAA,QAAQ,EAAE;AAZC,SAHT;AAiBJV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAJE;AAjBP;AADM,KAlkBT;AA2mBL,mBAAe;AACbwB,MAAAA,IAAI,EAAE;AACJjB,QAAAA,IAAI,EAAE,CAAC,OAAD,CADF;AAEJP,QAAAA,WAAW,EAAE,QAFT;AAGJ2B,QAAAA,WAAW,EAAE;AACXd,UAAAA,OAAO,EAAE;AACP,gCAAoB;AAClBC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE;AADA;AADU;AADb,WADE;AAQXO,UAAAA,QAAQ,EAAE;AARC,SAHT;AAaJV,QAAAA,SAAS,EAAE;AACT,iBAAO;AACLZ,YAAAA,WAAW,EAAE;AADR,WADE;AAIT,iBAAO;AACLA,YAAAA,WAAW,EAAE,aADR,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK;AAJE;AAbP;AADO;AA3mBV,GA9CM;AAgsBbwC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE;AAGPC,MAAAA,IAAI,EAAG;AACLnB,QAAAA,IAAI,EAAE,QADD;AAGLoB,QAAAA,UAAU,EAAG;AACX1B,UAAAA,EAAE,EAAE;AACFM,YAAAA,IAAI,EAAE,QADJ;AAEFvB,YAAAA,WAAW,EAAE;AAFX,WADO;AAKXD,UAAAA,KAAK,EAAE;AACLwB,YAAAA,IAAI,EAAE,QADD;AAELvB,YAAAA,WAAW,EAAE;AAFR,WALI;AASXkB,UAAAA,IAAI,EAAE;AACJK,YAAAA,IAAI,EAAE,QADF;AAEJvB,YAAAA,WAAW,EAAE;AAFT,WATK;AAaXmB,UAAAA,OAAO,EAAE;AACPI,YAAAA,IAAI,EAAE,QADC;AAEPvB,YAAAA,WAAW,EAAE;AAFN;AAbE;AAHR,OAHA;AA2BPkC,MAAAA,OAAO,EAAE;AACPX,QAAAA,IAAI,EAAE,QADC;AAGPoB,QAAAA,UAAU,EAAE;AACVT,UAAAA,OAAO,EAAE;AACPX,YAAAA,IAAI,EAAE,QADC;AAEPvB,YAAAA,WAAW,EAAE;AAFN;AADC;AAHL,OA3BF;AAsCP4C,MAAAA,OAAO,EAAG;AACRrB,QAAAA,IAAI,EAAE,QADE;AAGRoB,QAAAA,UAAU,EAAG;AACX1B,UAAAA,EAAE,EAAE;AACFM,YAAAA,IAAI,EAAE,QADJ;AAEFvB,YAAAA,WAAW,EAAE;AAFX,WADO;AAKXmC,UAAAA,QAAQ,EAAE;AACRZ,YAAAA,IAAI,EAAE,QADE;AAERvB,YAAAA,WAAW,EAAE;AAFL,WALC;AASXoC,UAAAA,KAAK,EAAE;AACLb,YAAAA,IAAI,EAAE,QADD;AAELvB,YAAAA,WAAW,EAAE;AAFR,WATI;AAaXqC,UAAAA,QAAQ,EAAE;AACRd,YAAAA,IAAI,EAAE,QADE;AAERvB,YAAAA,WAAW,EAAE;AAFL;AAbC;AAHL,OAtCH;AA8DP6C,MAAAA,IAAI,EAAG;AACLtB,QAAAA,IAAI,EAAE,QADD;AAGLoB,QAAAA,UAAU,EAAG;AACX1B,UAAAA,EAAE,EAAE;AACFM,YAAAA,IAAI,EAAE,QADJ;AAEFvB,YAAAA,WAAW,EAAE;AAFX,WADO;AAKXsC,UAAAA,QAAQ,EAAE;AACRf,YAAAA,IAAI,EAAE,QADE;AAERvB,YAAAA,WAAW,EAAE;AAFL,WALC;AASXoC,UAAAA,KAAK,EAAE;AACLb,YAAAA,IAAI,EAAE,QADD;AAELvB,YAAAA,WAAW,EAAE;AAFR,WATI;AAaXuC,UAAAA,QAAQ,EAAE;AACRhB,YAAAA,IAAI,EAAE,QADE;AAERvB,YAAAA,WAAW,EAAE;AAFL;AAbC;AAHR;AA9DA,KADC;AAwFV8C,IAAAA,eAAe,EAAE;AACfpB,MAAAA,MAAM,EAAE;AACNH,QAAAA,IAAI,EAAE,QADA;AAENF,QAAAA,EAAE,EAAE,QAFE;AAGNnB,QAAAA,IAAI,EAAE;AAHA;AADO;AAxFP;AAhsBC,CAAjB","sourceRoot":"/home/wasp/Documents/Andela/Portfolio/API/src/","sourcesContent":["module.exports = {\n    openapi: '3.0.1',\n    info: {\n      version: '0.0.1',\n      title: 'My Portfolio API',\n      description: 'My Portfolio API functionality',\n      contact: {\n        name: 'Mugisha Israel',\n        email: 'mugishaisrael18@gmail.com',\n      },\n      license: {\n        name: 'Apache 2.0',\n        url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\n      }\n    },\n\n    // schemes : [\n    //   \"http\",\n    //   \"http\"\n    // ],\n\n    // securityDefinitions : {\n    //   Bearer : {\n    //     type: \"apiKey\",\n    //     name: \"Authorization\",\n    //     in: \"header\"\n    //   }\n    // },\n    \n    servers: [\n      {\n        url: 'http://localhost:5000/',\n        description: 'Local server'\n      },\n      {\n        url: 'https://my-portfolio-back-end.herokuapp.com/doc/',\n        description: 'Remote server'\n      }\n    ],\n    \n    \n    tags: [\n      {\n        name: 'BlogPost'\n      }\n    ],\n    paths: {\n      '/api/Getblog': {\n        get: {\n          tags: ['BlogPost'],\n          summary: 'Returns the list of all the blogs',\n          operationId: 'getUsers',\n         \n          responses: {\n            '200': {\n              description: 'The list of the blogs',\n              content: {\n                'application/json': {\n                  schema: {\n                    $ref: '#/components/schemas/Blog'\n                  },\n                  example: {\n                    id: 'd5fE_asz',\n                    title: 'The New Turing Omnibus',\n                    body: 'Alexander K. Dewdney',\n                    imgLink: 'https://www.google.com/search?q=image&sxsrf=APq-WBtK50svBCcQkDbGn7EtidO55wEnSg:1643745123363&tbm=isch&source=iu&ictx=1&vet=1&fir=gxFxsvFBmxeZ9M%252C0JWe7yDOKrVFAM%252C_%253BqXynBYpZpHkhWM%252C4O2GvGuD-Cf09M%252C_%253BMOAYgJU89sFKnM%252CygIoihldBPn-LM%252C_%253BtTplitM2kjOQtM%252C-UStXW0dQEx4SM%252C_%253B2DNOEjVi-CBaYM%252CAOz9-XMe1ixZJM%252C_%253Bl5RllJHFLw5NyM%252CLOSptVP0p_ZwUM%252C_%253BA4G7eW2zetaunM%252Cl3NoP295SYrYvM%252C_%253BbDjlNH-20Ukm8M%252CG9GbNX6HcZ2O_M%252C_%253Bz4_uU0QB2pe-SM%252C7SySw5zvOgPYAM%252C_%253BsmRkxzhk74wASM%252CbUbrhOtxELp8CM%252C_%253BxE4uU8uoFN00aM%252CpEU77tdqT8sGCM%252C_%253BgOUAFhrbQ2nYQM%252COXvyXJop1qSGqM%252C_&usg=AI4_-kQONLnsECQfkpkg0bbsHJMrdYlKOg&sa=X&ved=2ahUKEwi5-rbho9_1AhWQnxQKHYYpCRgQ9QF6BAgFEAE#imgrc=gxFxsvFBmxeZ9M'\n                  },\n                }\n              }\n            },\n            \n          }\n        },\n\n      },\n\n      '/api/Getblog/{id}': {\n        get: {\n          tags: ['BlogPost'],\n          summary: 'Returns the blog post by id',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The blog id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          responses: {\n            '200': {\n              description: 'The blog description by id',\n              content: {\n                'application/json': {\n                  schema: {\n                    $ref: '#/components/schemas/Blog'\n                  },\n                  example: {\n                    id: 'd5fE_asz',\n                    title: 'The New Turing Omnibus',\n                    body: 'Alexander K. Dewdney',\n                    imgLink: 'https://www.google.com/search?q=image&sxsrf=APq-WBtK50svBCcQkDbGn7EtidO55wEnSg:1643745123363&tbm=isch&source=iu&ictx=1&vet=1&fir=gxFxsvFBmxeZ9M%252C0JWe7yDOKrVFAM%252C_%253BqXynBYpZpHkhWM%252C4O2GvGuD-Cf09M%252C_%253BMOAYgJU89sFKnM%252CygIoihldBPn-LM%252C_%253BtTplitM2kjOQtM%252C-UStXW0dQEx4SM%252C_%253B2DNOEjVi-CBaYM%252CAOz9-XMe1ixZJM%252C_%253Bl5RllJHFLw5NyM%252CLOSptVP0p_ZwUM%252C_%253BA4G7eW2zetaunM%252Cl3NoP295SYrYvM%252C_%253BbDjlNH-20Ukm8M%252CG9GbNX6HcZ2O_M%252C_%253Bz4_uU0QB2pe-SM%252C7SySw5zvOgPYAM%252C_%253BsmRkxzhk74wASM%252CbUbrhOtxELp8CM%252C_%253BxE4uU8uoFN00aM%252CpEU77tdqT8sGCM%252C_%253BgOUAFhrbQ2nYQM%252COXvyXJop1qSGqM%252C_&usg=AI4_-kQONLnsECQfkpkg0bbsHJMrdYlKOg&sa=X&ved=2ahUKEwi5-rbho9_1AhWQnxQKHYYpCRgQ9QF6BAgFEAE#imgrc=gxFxsvFBmxeZ9M'\n                  },\n                },\n              }\n            },\n            '404': {\n              description: 'The blog wasn\\'t found'\n            }\n          }\n        },\n      },\n\n      '/api/Postblog': {\n        post: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['BlogPost'],\n          description: 'Create users',\n          parameters: [],\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/Blog'\n                },\n                example: {\n                  Title: 'The New Turing Omnibus',\n                  Body: 'Alexander K. Dewdney',\n                  ImageLink: 'https://www.google.com/search?q=image&sxsrf=APq-WBtK50svBCcQkDbGn7EtidO55wEnSg:1643745123363&tbm=isch&source=iu&ictx=1&vet=1&fir=gxFxsvFBmxeZ9M%252C0JWe7yDOKrVFAM%252C_%253BqXynBYpZpHkhWM%252C4O2GvGuD-Cf09M%252C_%253BMOAYgJU89sFKnM%252CygIoihldBPn-LM%252C_%253BtTplitM2kjOQtM%252C-UStXW0dQEx4SM%252C_%253B2DNOEjVi-CBaYM%252CAOz9-XMe1ixZJM%252C_%253Bl5RllJHFLw5NyM%252CLOSptVP0p_ZwUM%252C_%253BA4G7eW2zetaunM%252Cl3NoP295SYrYvM%252C_%253BbDjlNH-20Ukm8M%252CG9GbNX6HcZ2O_M%252C_%253Bz4_uU0QB2pe-SM%252C7SySw5zvOgPYAM%252C_%253BsmRkxzhk74wASM%252CbUbrhOtxELp8CM%252C_%253BxE4uU8uoFN00aM%252CpEU77tdqT8sGCM%252C_%253BgOUAFhrbQ2nYQM%252COXvyXJop1qSGqM%252C_&usg=AI4_-kQONLnsECQfkpkg0bbsHJMrdYlKOg&sa=X&ved=2ahUKEwi5-rbho9_1AhWQnxQKHYYpCRgQ9QF6BAgFEAE#imgrc=gxFxsvFBmxeZ9M'\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'New Post was created successfully'\n            },\n            '401': {\n              description: 'Unauthorized to Post'\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/Deleteblog/{id}': {\n        delete: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['BlogPost'],\n          summary: 'Delete the blog post by id',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The blog id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          responses: {\n            '204': {\n              description: 'The blog post deleted successfully',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Blog'\n              //     },\n              //     example: {\n              //       id: 'd5fE_asz',\n              //       title: 'The New Turing Omnibus',\n              //       body: 'Alexander K. Dewdney',\n              //       imgLink: 'https://www.google.com/search?q=image&sxsrf=APq-WBtK50svBCcQkDbGn7EtidO55wEnSg:1643745123363&tbm=isch&source=iu&ictx=1&vet=1&fir=gxFxsvFBmxeZ9M%252C0JWe7yDOKrVFAM%252C_%253BqXynBYpZpHkhWM%252C4O2GvGuD-Cf09M%252C_%253BMOAYgJU89sFKnM%252CygIoihldBPn-LM%252C_%253BtTplitM2kjOQtM%252C-UStXW0dQEx4SM%252C_%253B2DNOEjVi-CBaYM%252CAOz9-XMe1ixZJM%252C_%253Bl5RllJHFLw5NyM%252CLOSptVP0p_ZwUM%252C_%253BA4G7eW2zetaunM%252Cl3NoP295SYrYvM%252C_%253BbDjlNH-20Ukm8M%252CG9GbNX6HcZ2O_M%252C_%253Bz4_uU0QB2pe-SM%252C7SySw5zvOgPYAM%252C_%253BsmRkxzhk74wASM%252CbUbrhOtxELp8CM%252C_%253BxE4uU8uoFN00aM%252CpEU77tdqT8sGCM%252C_%253BgOUAFhrbQ2nYQM%252COXvyXJop1qSGqM%252C_&usg=AI4_-kQONLnsECQfkpkg0bbsHJMrdYlKOg&sa=X&ved=2ahUKEwi5-rbho9_1AhWQnxQKHYYpCRgQ9QF6BAgFEAE#imgrc=gxFxsvFBmxeZ9M'\n              //     },\n              //   },\n              // }\n            },\n            '401': {\n              description: 'Unauthorized to Delete Post'\n            },\n            '404': {\n              description: 'The blog wasn\\'t found'\n            }\n          }\n        },\n      },\n\n      '/api/Updateblog/{id}': {\n        patch: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['BlogPost'],\n          description: 'Create users',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The blog id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/Blog'\n                },\n                example: {\n                  Title: 'The New Turing Omnibus',\n                  Body: 'Alexander K. Dewdney',\n                  ImageLink: 'https://www.google.com/search?q=image&sxsrf=APq-WBtK50svBCcQkDbGn7EtidO55wEnSg:1643745123363&tbm=isch&source=iu&ictx=1&vet=1&fir=gxFxsvFBmxeZ9M%252C0JWe7yDOKrVFAM%252C_%253BqXynBYpZpHkhWM%252C4O2GvGuD-Cf09M%252C_%253BMOAYgJU89sFKnM%252CygIoihldBPn-LM%252C_%253BtTplitM2kjOQtM%252C-UStXW0dQEx4SM%252C_%253B2DNOEjVi-CBaYM%252CAOz9-XMe1ixZJM%252C_%253Bl5RllJHFLw5NyM%252CLOSptVP0p_ZwUM%252C_%253BA4G7eW2zetaunM%252Cl3NoP295SYrYvM%252C_%253BbDjlNH-20Ukm8M%252CG9GbNX6HcZ2O_M%252C_%253Bz4_uU0QB2pe-SM%252C7SySw5zvOgPYAM%252C_%253BsmRkxzhk74wASM%252CbUbrhOtxELp8CM%252C_%253BxE4uU8uoFN00aM%252CpEU77tdqT8sGCM%252C_%253BgOUAFhrbQ2nYQM%252COXvyXJop1qSGqM%252C_&usg=AI4_-kQONLnsECQfkpkg0bbsHJMrdYlKOg&sa=X&ved=2ahUKEwi5-rbho9_1AhWQnxQKHYYpCRgQ9QF6BAgFEAE#imgrc=gxFxsvFBmxeZ9M'\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'Post Was Updated Successfully'\n            },\n            '401': {\n              description: 'Unauthorized to Update Post'\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/comment/{id}': {\n        put: {\n          security: [\n            {\n              ApiKey: [],\n            }\n          ],\n          tags: ['BlogPost'],\n          description: 'Comment on a blog',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The blog id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/Comment'\n                },\n                example: {\n                  Comment: 'Nice Work!',\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'Comment Was Updated Successfully'\n            },\n            \n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/like/{id}': {\n        put: {\n          security: [\n            {\n              ApiKey: [],\n            }\n          ],\n          tags: ['BlogPost'],\n          description: 'Like a blog',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The blog id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          // requestBody: {\n          //   content: {\n          //     'application/json': {\n          //       schema: {\n          //         $ref: '#/components/schemas/Comment'\n          //       },\n          //       example: {\n          //         Comment: 'Nice Work!',\n          //       },\n          //     }\n          //   },\n          //   required: true\n          // },\n          responses: {\n            '200': {\n              description: 'Liked a Post Successfully',\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/PostContact': {\n        post: {\n          tags: ['ContactForm'],\n          description: 'Create contact query',\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/Contact'\n                },\n                example: {\n                  FullName: 'Alexander The Great',\n                  Email: 'guest@alexander.com',\n                  Messages: 'Hello I want to hire you in my company send your resume and cover letter'\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'New Query was created successfully'\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/contact': {\n        get: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['ContactForm'],\n          summary: 'Returns the list of all the queries',\n          responses: {\n            '200': {\n              description: 'The list of the queries',\n              content: {\n                'application/json': {\n                  schema: {\n                    $ref: '#/components/schemas/Contact'\n                  },\n                  example: {\n                    id: 'd5fE_asz',\n                    FullName: 'Alexander The Great',\n                    Email: 'guest@alexander.com',\n                    Messages: 'Hello I want to hire you in my company send your resume and cover letter'\n                  },\n                }\n              }\n            },\n\n            '401': {\n              description: 'Unauthorized to View Contact Queries',\n            },\n            \n          }\n        },\n\n      },\n\n      '/api/contact/{id}': {\n        get: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['ContactForm'],\n          summary: 'Returns the contact query by id',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The query id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          responses: {\n            '200': {\n              description: 'The blog description by id',\n              content: {\n                'application/json': {\n                  schema: {\n                    $ref: '#/components/schemas/Contact'\n                  },\n                  example: {\n                    id: 'd5fE_asz',\n                    FullName: 'Alexander The Great',\n                    Email: 'guest@alexander.com',\n                    Messages: 'Hello I want to hire you in my company send your resume and cover letter'\n                  },\n                },\n              }\n            },\n            '401': {\n              description: 'Unauthorized to View Contact Query By Id',\n            },\n            '404': {\n              description: 'The query wasn\\'t found'\n            }\n          }\n        },\n      },\n\n      '/api/DeleteContact/{id}': {\n        delete: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['ContactForm'],\n          summary: 'Delete the query post by id',\n          parameters: [{\n            name: \"id\",\n            in: \"path\",\n            required : true,\n            description : \"The query id\",\n            schema: {\n              type: \"string\",\n            },\n            \n        }],\n          responses: {\n            '200': {\n              description: 'The query post deleted successfully',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Blog'\n              //     },\n              //     example: {\n              //       id: 'd5fE_asz',\n              //       title: 'The New Turing Omnibus',\n              //       body: 'Alexander K. Dewdney',\n              //       imgLink: 'https://www.google.com/search?q=image&sxsrf=APq-WBtK50svBCcQkDbGn7EtidO55wEnSg:1643745123363&tbm=isch&source=iu&ictx=1&vet=1&fir=gxFxsvFBmxeZ9M%252C0JWe7yDOKrVFAM%252C_%253BqXynBYpZpHkhWM%252C4O2GvGuD-Cf09M%252C_%253BMOAYgJU89sFKnM%252CygIoihldBPn-LM%252C_%253BtTplitM2kjOQtM%252C-UStXW0dQEx4SM%252C_%253B2DNOEjVi-CBaYM%252CAOz9-XMe1ixZJM%252C_%253Bl5RllJHFLw5NyM%252CLOSptVP0p_ZwUM%252C_%253BA4G7eW2zetaunM%252Cl3NoP295SYrYvM%252C_%253BbDjlNH-20Ukm8M%252CG9GbNX6HcZ2O_M%252C_%253Bz4_uU0QB2pe-SM%252C7SySw5zvOgPYAM%252C_%253BsmRkxzhk74wASM%252CbUbrhOtxELp8CM%252C_%253BxE4uU8uoFN00aM%252CpEU77tdqT8sGCM%252C_%253BgOUAFhrbQ2nYQM%252COXvyXJop1qSGqM%252C_&usg=AI4_-kQONLnsECQfkpkg0bbsHJMrdYlKOg&sa=X&ved=2ahUKEwi5-rbho9_1AhWQnxQKHYYpCRgQ9QF6BAgFEAE#imgrc=gxFxsvFBmxeZ9M'\n              //     },\n              //   },\n              // }\n            },\n            '401': {\n              description: 'Unauthorized to Delete Contact Queries',\n            },\n            '404': {\n              description: 'The query wasn\\'t found'\n            }\n          }\n        },\n      },\n\n      '/api/register': {\n        post: {\n          tags: ['Registration'],\n          description: 'Create Account',\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/User'\n                },\n                example: {\n                  UserName: 'Alexander The Great',\n                  Email: 'guest@alexander.com',\n                  Password: 'password'\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'New User was created successfully'\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/users': {\n        get: {\n          security: [\n            {\n              ApiKey: []\n            }\n          ],\n          tags: ['Users'],\n          summary: 'Returns the list of all the users',\n          responses: {\n            '200': {\n              description: 'The list of the users',\n              content: {\n                'application/json': {\n                  schema: {\n                    $ref: '#/components/schemas/User'\n                  },\n                }\n              }\n            },\n\n            '401': {\n              description: 'Unauthorized to get All Users',\n            },\n            \n          }\n        },\n\n      },\n\n      '/api/login': {\n        post: {\n          tags: ['Login'],\n          description: 'Log In',\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/User'\n                },\n                example: {\n                  Email: 'guest@alexander.com',\n                  Password: 'password'\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'User Logged In successfully'\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n      '/api/ApiKey': {\n        post: {\n          tags: ['Login'],\n          description: 'Log In',\n          requestBody: {\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/User'\n                },\n              }\n            },\n            required: true\n          },\n          responses: {\n            '200': {\n              description: 'ApiKey Logged In Successfully'\n            },\n            '400': {\n              description: 'Bad Request',\n              // content: {\n              //   'application/json': {\n              //     schema: {\n              //       $ref: '#/components/schemas/Error'\n              //     },\n              //     example: {\n              //       message: 'User identificationNumbers 10, 20 already exist',\n              //       internal_code: 'invalid_parameters'\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n\n      },\n\n    },\n\n    components: {\n      schemas: {\n        \n\n        Blog : {\n          type: 'object',\n          \n          properties : {\n            id: {\n              type: 'string',\n              description: 'The auto-generated id of the blog'\n            },\n            title: {\n              type: 'string',\n              description: 'The blog title'\n            },\n            body: {\n              type: 'string',\n              description: 'The body of the blog'\n            },\n            imgLink: {\n              type: 'string',\n              description: 'The Link of the Image Link'\n            },\n            \n          }\n        },\n\n        Comment: {\n          type: 'object',\n\n          properties: {\n            Comment: {\n              type: 'string',\n              description: 'Type your comment here',\n            }\n          }\n        },\n\n        Contact : {\n          type: 'object',\n          \n          properties : {\n            id: {\n              type: 'string',\n              description: 'The auto-generated id of the blog'\n            },\n            FullName: {\n              type: 'string',\n              description: 'Fullname of the sender'\n            },\n            Email: {\n              type: 'string',\n              description: 'Sender\\'s email address'\n            },\n            Messages: {\n              type: 'string',\n              description: 'The message of the sender'\n            },\n            \n          }\n        },\n\n        User : {\n          type: 'object',\n          \n          properties : {\n            id: {\n              type: 'string',\n              description: 'The auto-generated id of the User'\n            },\n            UserName: {\n              type: 'string',\n              description: 'Username of the User'\n            },\n            Email: {\n              type: 'string',\n              description: 'User\\'s email address'\n            },\n            Password: {\n              type: 'string',\n              description: 'The password of the user'\n            },\n            \n          }\n        },\n        \n      },\n      securitySchemes: {\n        ApiKey: {\n          type: 'apiKey',\n          in: 'header',\n          name: 'auth-token' \n        },\n      }\n    }\n  };\n  "]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0af95d2054613e09281eb3ea1d433a87aceda38","contentHash":"87dbce18d499729eea590a27c5520524d2c9adaa575135026737ba10e4e6c8b2"}}